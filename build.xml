<project name="TNT4J-Streams" default="tnt4j-streams-api" basedir=".">

    <echo message="Processing ${ant.project.name}${line.separator}" level="info"/>

    <condition property="root" value="${basedir}/.">
        <not>
            <isset property="root"/>
        </not>
    </condition>

    <!-- Import default properties for jKool builds -->
    <import file="${root}/build-properties.xml"/>

    <property name="docpkg" value="com.jkool.tnt4j.streams.*"/>
    <property name="src" value="src"/>
    <property name="lib" value="lib"/>
    <property name="lib_build" value="lib_build"/>
    <property name="config" value="config"/>
    <property name="samples" value="samples"/>
    <property name="scripts" value="bin"/>
    <property name="classes" value="${project-build}/classes"/>
    <property name="doc" value="${project-build}/doc"/>
    <property name="jar_name" value="${project-pkg-name}.jar"/>
    <property name="jar" value="${project-build}/${jar_name}"/>
    <property name="pkg" value="${project-build}/${project-pkg-name}"/>

    <target name="init">
        <tstamp/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${project-build}/lib"/>
        <copy todir="${project-build}/lib">
            <fileset dir="${lib}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
    </target>

    <!-- Compile into ${classes} directory -->
    <target name="compile" depends="init" description="compile the source">
        <javac destdir="${classes}" debug="true" debuglevel="${debuglevel}" source="${source}" target="${target}">
            <src path="${src}"/>
            <classpath>
                <fileset dir="${lib}"/>
                <fileset dir="${lib_build}"/>
            </classpath>
        </javac>

        <copy todir="${classes}">
            <fileset dir="${src}" includes="resources/*.properties"/>
        </copy>
    </target>

    <target name="clean" description="clean up">
        <delete dir="${project-build}"/>
        <delete dir="${classes}"/>
        <echo message="Clean of ${ant.project.name} Complete${line.separator}" level="info"/>
    </target>

    <target name="tnt4j-streams-api" depends="init,compile" description="build TNT4J Streams">

        <path id="runtime-classpath">
            <fileset dir="${project-build}/lib">
                <include name="*.jar"/>
                <include name="tnt4j-log4j12\*.jar"/>
            </fileset>
        </path>

        <manifestclasspath property="jar-runtime-classpath" jarfile="${jar}" maxParentLevels="0">
            <classpath refid="runtime-classpath"/>
        </manifestclasspath>

        <jar jarfile="${jar}" basedir="${classes}" update="false">
            <manifest>
                <attribute name="Implementation-Vendor" value="${vendor}"/>
                <attribute name="Implementation-Title" value="${prodname}"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Class-Path" value="${jar-runtime-classpath}"/>
                <attribute name="Main-Class" value="com.jkool.tnt4j.streams.StreamsAgent"/>
            </manifest>
        </jar>
        <echo message="Copying ${ant.project.name} configuration" level="info"/>
        <copy todir="${project-build}/config">
            <fileset dir="${config}">
                <include name="**/*.properties"/>
                <include name="**/*.xsd"/>
            </fileset>
        </copy>
        <echo message="Copying ${ant.project.name} README and LICENSE info" level="info"/>
        <copy todir="${project-build}">
            <fileset dir="${root}">
                <include name="README.md"/>
                <include name="LICENSE"/>
            </fileset>
        </copy>
        <echo message="Copying ${ant.project.name} samples" level="info"/>
        <copy todir="${project-build}/samples">
            <fileset dir="${samples}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <echo message="Copying ${ant.project.name} Shell Scripts" level="info"/>
        <copy todir="${project-build}/bin">
            <fileset dir="${scripts}">
                <include name="**/*.*"/>
            </fileset>
        </copy>

        <echo message="Build of ${ant.project.name} Complete${line.separator}" level="info"/>
    </target>

    <target name="doc" depends="tnt4j-streams-api" description="build javadoc">
        <delete dir="${doc}"/>
        <javadoc destdir="${doc}"
                 sourcepath="${src}"
                 packagenames="${docpkg}"
                 source="${source}"
                 Doctitle="TNT4J Streams"
                 Windowtitle="TNT4J Streams"
                 Header="Version ${version}"
                 bottom="${copyright.html}"
                 access="protected"
                 use="true"
                 notree="false"
                 nonavbar="false"
                 noindex="false"
                 splitindex="true"
                 author="true"
                 version="true"
                 nodeprecatedlist="false"
                 nodeprecated="false">
            <classpath>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javadoc>

        <!--delete file="${src}/overview.html" quiet="true"/-->
    </target>

    <target name="tnt4j-streams-pkg" depends="doc" description="build package for distribution">
        <echo message="Deleting old archives" level="info"/>
        <delete dir="${project-build}" includes="*-all.jar,*-all.zip"/>

        <echo message="Creating ${pkg}-${version}-all.jar" level="info"/>
        <zip destfile="${pkg}-${version}-all.jar">
            <zipgroupfileset dir="lib" includes="*.jar"/>
            <zipgroupfileset dir="${project-build}" includes="${jar_name}"/>
        </zip>
        <echo message="Creating ${pkg}-final-all.jar" level="info"/>
        <zip destfile="${pkg}-final-all.jar">
            <zipgroupfileset dir="lib" includes="*.jar"/>
            <zipgroupfileset dir="${project-build}" includes="${jar_name}"/>
        </zip>
    </target>

    <target name="tnt4j-streams" depends="tnt4j-streams-api" description="build executables"/>
    <target name="all" depends="tnt4j-streams-pkg" description="generate the distribution"/>
    <target name="rebuild" depends="clean,all" description="clean and build"/>

</project>
