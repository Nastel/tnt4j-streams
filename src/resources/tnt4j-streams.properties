#TNT4J-Streams resource bundle mappings for EN language

#package com.jkool.tnt4j.streams
StreamsAgent.start.main=jKool TNT4J Streams session starting as standalone application...
StreamsAgent.start.api=jKool TNT4J Streams session starting as API integration...
StreamsAgent.no.activity.streams=No Activity Streams found in configuration
StreamsAgent.missing.cfg=Missing <cfg_file_name> for '-f' argument
StreamsAgent.invalid.argument=Invalid argument\: {0}
StreamsAgent.help= \n\
  \Valid arguments\:\n\
  \      [-f\:<cfg_file_name>] [-h|-?]\n\
  \where\:\n\
  \   -f      -  Load TNT4J Streams data source configuration from <cfg_file_name>\n\
  \   -h, -?  -  Print usage\n

#package com.jkool.tnt4j.streams.configure
ConfigParserHandler.element.must.have=Element ''{0}'' must have ''{1}'' or ''{2}'' attributes defined or one or more ''{3}'' child elements{4}
ConfigParserHandler.multiple.elements=Cannot have multiple {0} elements
ConfigParserHandler.missing.attribute=Missing {0} attribute ''{1}''
ConfigParserHandler.missing.attribute2=Missing {0} attribute ''{1}'' for {2}
ConfigParserHandler.malformed.configuration=Malformed configuration\: Detected nested {0} definitions
ConfigParserHandler.malformed.configuration2=Malformed configuration\: {0} expected to have {1} as parent
ConfigParserHandler.malformed.configuration3=Malformed configuration\: {0} expected to have {1} or {2} as parent
ConfigParserHandler.duplicate.parser.definition=Duplicate parser definition ''{0}''
ConfigParserHandler.not.implement.interface={0} {1} ''{2}'' does not implement interface ''{3}''{4}
ConfigParserHandler.failed.to.load=Failed to load {0} {1} ''{2}''{3}
ConfigParserHandler.element.has.both=Element ''{0}'' must not have both ''{1}'' or ''{2}'' attributes defined and one or more ''{3}'' child elements{4}
ConfigParserHandler.element.has.both2=Element ''{0}'' cannot have both ''{1}'' and ''{2}'' child elements{3}
ConfigParserHandler.must.contain={0} must contain one of attributes ''{1}'' or ''{2}''
ConfigParserHandler.cannot.contain={0} cannot contain both attributes ''{1}'' and ''{2}''
ConfigParserHandler.duplicate=Duplicate {0} ''{1}''
ConfigParserHandler.not.extend.class={0} {1} ''{2}'' does not extend class ''{3}''{4}
ConfigParserHandler.undefined.reference=Undefined {0} reference ''{1}''
ConfigParserHandler.at.line=, at line {0}


StreamsConfig.file.not.found=Could not find configuration file ''{0}''

#package com.jkool.tnt4j.streams.fields
ActivityField.field.type.name.empty=Activity field type name cannot be empty

ActivityFieldLocator.mapped.default=Applying default mapping for locator type ''{0}''
ActivityFieldLocator.mapped.result=Mapped value ''{0}'' to ''{1}'' for locator type ''{2}''
ActivityFieldLocator.numeric.locator.positive=Numeric locator must be > 0

ActivityInfo.applying.field=Applying field {0} from\: {1}
ActivityInfo.multiple.locators=Field {0}, multiple locators are not supported for enumeration-based fields
ActivityInfo.failed.parsing=Failed parsing field\: {0}, number of values does not match number of locators
ActivityInfo.field.null=Field {0} resolves to null value, not applying field
ActivityInfo.applying.field.value=Applying field {0}, value \= {1}
ActivityInfo.unrecognized.activity=Unrecognized Activity field\: {0}
ActivityInfo.set.field=Set field {0} to ''{1}''
ActivityInfo.tracker.null=Activity destination not specified, activity not being recorded
ActivityInfo.retry.successful=Activity recording retry successful
ActivityInfo.recording.failed=Failed recording activity
ActivityInfo.will.retry=Will retry recording in {0} seconds

StreamFieldType.invalid.ordinal=Invalid StreamFieldType ordinal value ''{0}'' (range\: 0-{1})
StreamFieldType.no.enum.constant=No enum constant StreamFieldType.{0}
StreamFieldType.not.defined={0} does not have a defined enumeration set
StreamFieldType.name.empty=Name must be not empty

#package com.jkool.tnt4j.streams.inputs
CharacterStream.cannot.set.both=Cannot set both {0} and {1}
CharacterStream.waiting.for.connection=Waiting for socket connection on port\: {0}
CharacterStream.accepted.connection=Accepted connection, reading data from socket\: {0}
CharacterStream.stream.still.open=Stream is still open
CharacterStream.no.stream.source=Input stream source type not specified
CharacterStream.no.stream.reader=RAW stream or reader is not set

FileLineStream.initializing.stream=Initializing stream using file name\: {0}
FileLineStream.opening.file=Opening file\: {0}
FileLineStream.undefined.filename=File name not defined
FileLineStream.file.not.opened=File is not opened for reading

FilePollingStream.reading.changes=Reading changes of log file\: {0}
FilePollingStream.cant.access=Can't access log file\! trying to swap to later log.
FilePollingStream.next.not.found=Next log file not found\! Interrupting polling...
FilePollingStream.file.updated=File updated {0} sec. ago. Time since last file reading {1} sec.
FilePollingStream.no.changes=No changes available. Waiting until next invoke...
FilePollingStream.error.rolling=Error while rolling to marked log line\:
FilePollingStream.error.reading=Error reading new log file entries\:
FilePollingStream.changing.to.next=Changing to next available log file\: {0}
FilePollingStream.reader.error=Couldn't initialize reader for log file\! Interrupting polling...
FilePollingStream.log.shorter=Looks like log file got shorter...
FilePollingStream.resetting.reader=Resetting log file reader to {0} position...
FilePollingStream.changing.to.previous=Changing to previous found log file\: {0}
FilePollingStream.changes.buffer.limit=Changes buffer size limit is reached and Log entry is skipped\: {0}
FilePollingStream.changes.buffer.uninitialized=Queue of changed lines is not initialized\!..

TNTInputStream.default.tracker=Build default tracker for source {0}
TNTInputStream.failed.to.process=Failed to process activity data at position {0}
TNTInputStream.starting=Starting ...
TNTInputStream.data.stream.ended=Data stream ended ...
TNTInputStream.no.parser=No Parser accepted Message \!..
TNTInputStream.build.new.tracker=Build new tracker for source {0}
TNTInputStream.failed.to.connect=Failed to connect to {0}
TNTInputStream.will.retry=Will retry in {0} seconds
TNTInputStream.failed.record.activity.at=Failed to record activity at position {0}\: {1}
TNTInputStream.failed.record.activity=Failed to record activity\: {0}
TNTInputStream.thread.ended=Thread {0} ended
TNTInputStream.no.owner.thread=Owner thread has not been set

WmqStream.must.specify.one=Must specify at least one of {0}, {1}, {2}, or {3}
WmqStream.connecting.default=Connecting to default queue manager, props\={0}
WmqStream.connecting.qm=Connecting to queue manager ''{0}'', props\={1}
WmqStream.subscribing.to.topic1=Subscribing to topic string ''{0}'' using topic object ''{1}'' and subscription object ''{2}'' options\=0x{3}
WmqStream.subscribing.to.topic2=Subscribing to topic string ''{0}'' using topic object ''{1}'' options\=0x{2}
WmqStream.opening.queue=Opening queue ''{0}'' options\=0x{1}
WmqStream.reading.from=Reading from {0}, GMO\=0x{1}
WmqStream.failed.opening=Failed opening object\: {0}
WmqStream.failed.to.connect=Failed to connect to queue manager\: {0}
WmqStream.waiting.for.message=Waiting for message on {0}
WmqStream.read.msg=Read msg from {0}, total payload length\={1}
WmqStream.stripped.wmq=Stripped WMQ headers
WmqStream.message.data=Message Data (length\={0})\: {1}
WmqStream.failed.reading=Failed reading message from {0}\: {1}
WmqStream.reached.limit=Reached limit of {0} message read failures - closing queue manager connection
WmqStream.error.closing=Error closing {0} {1}\: {2}
WmqStream.error.closing.qmgr=Error closing qmgr {0}\: {1}

#package com.jkool.tnt4j.streams.parsers
ActivityParser.adding.field=Adding field {0}
ActivityParser.data.unsupported=Data in the format of a {0} is not supported
ActivityParser.data.end=Reached end of data stream
ActivityParser.error.reading=Error reading from data stream
ActivityParser.setting=Setting {0} to ''{1}''
ActivityParser.input.not.match=Input does not match pattern defined in parser ''{0}''
ActivityParser.parsing=Parsing\: {0}
ActivityParser.parsing.failed=Failed parsing data for field {0}
ActivityParser.ignoring=Ignoring property {0}
ActivityParser.split=Split input into {0} fields
ActivityParser.not.find=Did not find any fields in input string

ActivityNameValueParser.no.field.delimiter=Field delimiter not specified
ActivityNameValueParser.no.value.delimiter=ActivityNameValueParser\: value delimiter not specified
ActivityNameValueParser.found=Found Name/Value\: {0}

ActivityRegExParser.no.regex.pattern=Regular expression pattern not specified or empty
ActivityRegExParser.conflicting.mapping=Conflicting mapping for ''{0}''
ActivityRegExParser.applying.regex=Applying RegEx Match mappings, count \= {0}
ActivityRegExParser.match=match {0} \= {1}
ActivityRegExParser.found.matches=Found {0} matches
ActivityRegExParser.setting.field=Setting field {0} from match locations
ActivityRegExParser.failed.parsing.regex=Failed parsing RegEx Match data for field {0}
ActivityRegExParser.setting.group.field=Setting field {0} from group locations
ActivityRegExParser.failed.parsing.regex.group=Failed parsing RegEx Group data for field {0}

ActivityTokenParser.no.field.delimiter=Field delimiter not specified or empty

ActivityXmlParser.adding.mapping=Adding {0} mapping {1}
ActivityXmlParser.required.locator.not.found=Required locator not found\: {0}
ActivityXmlParser.data.end=Reached end of xml data stream
ActivityXmlParser.error.reading=Error reading from xml data stream

MessageActivityXmlParser.msg.signature=Message Signature ({0})\: msgType\={1} msgFormat\={2} msgId\={3} [{4}] userId\={5} putApplType\={6} putApplName\={7} putDate\={8} putTime\={9}

MessageType.illegal.num.value=Value ''{0}'' is not valid for enumeration MessageType
MessageType.illegal.obj.value=Cannot convert object of type ''{0}'' to enum MessageType
MessageType.null.object=Object must be non-null

#package com.jkool.tnt4j.streams.utils
StreamsThread.wait.for=Completed waiting for thread to die in {0} msec.
StreamsThread.sleepFully.interrupted=Sleep interrupted (count\={0}), after {1} msec. (initial\={2})
StreamsThread.sleepFully.remaining=\   Going back to sleep for {0} msec.
StreamsThread.halt=Signaled to terminate
StreamsThread.sleep.interrupted=Sleep interrupted after {0} msec. (initial\={1})

StreamTimestamp.null.timestamp.srt=Timestamp value string must be non-null
StreamTimestamp.fraction.length.not.supported=Date format containing more than 6 significant digits for fractional seconds is not supported

TimestampFormatter.unsupported.pattern=Unsupported date/time pattern\: dataType\={0}, units\={1}, pattern\={2}, locale\={3}
TimestampFormatter.failed.parsing=Failed to parse date/time value ''{0}''\: {1}

#package com.jkool.tnt4j.streams.custom.parsers
ApacheAccessLogParser.setting.regex.mapping=Setting Apache access log parsing RegEx mapping {0} from ''{1}'' to ''{2}''
ApacheAccessLogParser.regex.made=Made Apache access log parsing RegEx ''{0}''
ApacheAccessLogParser.could.not.make.regex=Could not make Apache access log parsing RegEx for ''{0}''

#### END ###

