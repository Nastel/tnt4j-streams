#package com.jkoolcloud.tnt4j.streams.inputs
KafkaStream.empty.messages.buffer=Found empty messages buffer. Retrieving new ones...
KafkaStream.retrieved.new.messages=Retrieved {0} new messages
KafkaStream.retrieved.no.new.messages=Retrieved no new messages...
KafkaStream.next.message=Next message from buffer\: {0}
KafkaStream.stopping=TNT4J-Streams Kafka stream is stopping...
KafkaStream.server.starting=TNT4J-Streams Kafka stream is starting server...
KafkaStream.server.started=TNT4J-Streams Kafka stream server has started
KafkaStream.consumer.starting=TNT4J-Streams Kafka stream is starting consumer...
KafkaStream.retrieving.messages.timeout=New messages reception timed out! Waiting again...
KafkaStream.zookeeper.server.starting=TNT4J-Streams Kafka stream is starting ZooKeeper server...
KafkaStream.zookeeper.server.started=TNT4J-Streams Kafka stream ZooKeeper server has started
KafkaStream.committing.offset=Committing partition ''{0}'' messages offset {1}

KafkaConsumerStream.consumer.cfgFile.load=Loading Kafka consumer configuration file\: {0}
KafkaConsumerStream.consumer.cfgFile.load.failed=Failed to load Kafka consumer configuration file\:

#package com.jkoolcloud.tnt4j.streams.parsers
KafkaConsumerRecordParser.resolve.locator.value.failed=Failed to resolve Kafka Consumer record field value\:
KafkaProducerRecordParser.resolve.locator.value.failed=Failed to resolve Kafka Producer record field value\:

#package com.jkoolcloud.tnt4j.streams.custom.kafka.interceptors
InterceptionsManager.cfg.load.failed=Failed loading interceptors configuration properties file\: {0}
InterceptionsManager.bind.reference=Binding interceptor reference\: ref={0}, refsCount={1}
InterceptionsManager.unbind.reference=Unbinding interceptor reference\: ref={0}, refsCount={1}
InterceptionsManager.send=InterceptionsManager.send\: producerRecord={0}
InterceptionsManager.acknowledge=InterceptionsManager.acknowledge\: recordMetadata={0}, exception={1}
InterceptionsManager.consume=InterceptionsManager.consume\: consumerRecords={0}
InterceptionsManager.commit=InterceptionsManager.commit\: map={0}

#package com.jkoolcloud.tnt4j.streams.custom.kafka.interceptors.reporters

#package com.jkoolcloud.tnt4j.streams.custom.kafka.interceptors.reporters.metrics
MetricsReporter.clients.jmx.fail=Failed to collect Kafka clients metrics over JMX
MetricsReporter.report.metrics.fail=Failed to report metrics
MetricsReporter.consumer.jmx.fail=Failed to collect 'kafka.consumer' metrics over JMX
MetricsReporter.producer.jmx.fail=Failed to collect 'kafka.producer' metrics over JMX
MetricsReporter.jvm.jmx.fail=Failed to collect 'JVM' metrics over JMX
MetricsReporter.bean.attr.fail=Failed to get MBean ''{0}'' attribute ''{1}'' value: {2}
MetricsReporter.bean.info.fail=Failed to get MBean ''{0}'' info data: {1}

#package com.jkoolcloud.tnt4j.streams.custom.kafka.interceptors.reporters.trace
MsgTraceReporter.polled.commands=Polled {0} TNT Kafka interceptors command messages...
MsgTraceReporter.send.failed=Kafka trace message reporter 'send' failed\:
MsgTraceReporter.acknowledge.failed=Kafka trace message reporter 'acknowledge' failed\:
MsgTraceReporter.consume.failed=Kafka trace message reporter 'consume' failed\:
MsgTraceReporter.commit.failed=Kafka trace message reporter 'commit' failed\:

TraceCommandDeserializer.cmd.parse.failed=Failed to parse command message\:
