#TNT4J-Streams resource bundle mappings for EN language

#package com.jkoolcloud.tnt4j.streams
StreamsAgent.start.main=jKool TNT4J-Streams v.{0} session starting as standalone application...\n\
  \Runtime environment: {1}
StreamsAgent.start.api=jKool TNT4J-Streams v.{0} session starting as API integration...\n\
  \Runtime environment: {1}

streams.version=jKool TNT4J-Streams version
java.version=Java version
java.vendor=Java vendor
java.vm.name=VM name
java.vm.version=VM version
os.name=OS name
os.version=OS version

StreamsAgent.cfg.load.failed=Failed to load streams configuration\: {0}
StreamsAgent.erroneous.configuration=Erroneous TNT4J-Streams configuration found\! Interrupting initialization...
StreamsAgent.no.activity.streams=No Activity Streams found in configuration
StreamsAgent.no.piped.activity.parsers=No piped stream parsers found in configuration
StreamsAgent.missing.cfg.file=Missing <cfg_file_name> for ''{0}'' argument
StreamsAgent.missing.argument.value=Missing value for ''{0}'' argument
StreamsAgent.invalid.args=Configuration file already defined. Can not use arguments [-f\:] and [-p\:] multiple times or together.
StreamsAgent.invalid.args2=ZooKeeper configuration file already defined. Can not use argument [-z\:] multiple times.
StreamsAgent.invalid.args3=Stream identifier to use from ZooKeeper configuration already defined. Can not use argument [-sid\:] multiple times.
StreamsAgent.invalid.args4=Argument already defined. Can not use argument [{0}] multiple times.
StreamsAgent.invalid.argument=Invalid argument\: {0}
StreamsAgent.loading.config.file=Loading TNT4J-Streams data source configuration from file\: {0}
StreamsAgent.zk.cfg.monitor.logger=Initializing logger configuration monitoring on ZK node\: {0}
StreamsAgent.zk.cfg.monitor.streams=Initializing streams configuration monitoring on ZK node\: {0}
StreamsAgent.zk.cfg.failed=Failed to connect ZK ensemble\: {0}
StreamsAgent.stopping.streams=Initializing stop of running streams: threadGroup={0}, streams={1}
StreamsAgent.streams.stop.empty=No running streams found...
StreamsAgent.streams.stop.start=Will stop {0} running streams...
StreamsAgent.streams.stop.complete=Running streams stop completed. Stop process duration\: {0} msec.
StreamsAgent.invalid.stream.id=Invalid stream identifier\: {0}
StreamsAgent.streams.registry.sid=Using streams configuration registry stream identifier\: {0}
StreamsAgent.streams.registry.sid.zk.path=Resolved stream identifier ''{0}'' configured ZK node path\: {1}
StreamsAgent.streams.registry.sid.setup=Setting up ZK nodes data for stream identifier\: {0}
StreamsAgent.start.failed=Failed to start streams\: {0}
StreamsAgent.cfg.error=Streams configuration error\: {0}
StreamsAgent.uncaught.exception=Streams got uncaught exception\: thread={0}, error={1}
StreamsAgent.help=\n\
  \Valid arguments\:\n\
  \      [-f\:<cfg_file_name>] | [[-p\:<cfg_file_name>] [-s]] | [[-z\:<cfg_file_name>] [-sid\:<stream_id>]] | [-h|-?]\n\
  \where\:\n\
  \   -f      -  Load TNT4J-Streams data source configuration from <cfg_file_name>\n\
  \   -p      -  Load parsers configuration from <cfg_file_name>\n\
  \     -s      -  Skip unparsed activity data entries and continue streaming\n\
  \   -z      -  Load TNT4J-Streams ZooKeeper configuration from <cfg_file_name>\n\
  \     -sid    -  Stream identifier to use form ZooKeeper configuration\n\
  \   -h, -?  -  Print usage

StreamsDaemon.start.main=jKool TNT4J-Streams v.{0} session starting as system daemon service...\n\
  \Runtime environment: {1}
StreamsDaemon.init=Initialising TNT4J-Streams daemon: {0}
StreamsDaemon.already.initialized=Service already initialized!
StreamsDaemon.processing.args=Processing TNT4J-Streams daemon arguments: {0}
StreamsDaemon.invalid.args=Invalid arguments! See log for details...
StreamsDaemon.no.args=No arguments provided. Will try to use default ones.
StreamsDaemon.starting=Starting TNT4J-Streams daemon...
StreamsDaemon.cfg.load.failed=Failed to load streams configuration\: {0}
StreamsDaemon.streams.started=TNT4J-Streams daemon started...
StreamsDaemon.start.completed=TNT4J-Streams daemon start wait completed...
StreamsDaemon.stopping=Stopping TNT4J-Streams daemon...
StreamsDaemon.stop.completed=TNT4J-Streams daemon stop completed...
StreamsDaemon.fatal.error=Fatal exception occurred in daemon main(): {0}

#package com.jkoolcloud.tnt4j.streams.configure
ConfigParserHandler.element.must.have=Element ''{0}'' named ''{5}'' must have ''{1}'' or ''{2}'' attributes defined or one or more ''{3}'' child elements{4}
ConfigParserHandler.multiple.elements=Can not have multiple {0} elements
ConfigParserHandler.missing.attribute=Missing element ''{0}'' attribute ''{1}'' data
ConfigParserHandler.missing.element=Missing element ''{0}'' data
ConfigParserHandler.missing.attribute2=Missing element ''{0}'' attribute ''{1}'' for {2}
ConfigParserHandler.malformed.configuration=Malformed configuration\: Detected nested ''{0}'' definitions
ConfigParserHandler.malformed.configuration5=Malformed configuration\: Detected nested ''{0}'' and ''{1}'' definitions
ConfigParserHandler.malformed.configuration2=Malformed configuration\: ''{0}'' expected to have ''{1}'' as parent
ConfigParserHandler.duplicate.parser.definition=Duplicate parser definition ''{0}''
ConfigParserHandler.not.implement.interface={0} {1} ''{2}'' does not implement interface ''{3}''{4}
ConfigParserHandler.failed.to.load=Failed to load {0} {1} ''{2}''{3}
ConfigParserHandler.element.has.both=Element ''{0}'' must not have both ''{1}'' or ''{2}'' attributes defined and one or more ''{3}'' child elements{4}
ConfigParserHandler.element.has.both2=Element ''{0}'' can not have both ''{1}'' and ''{2}'' child elements{3}
ConfigParserHandler.must.contain=Element ''{0}'' must contain one of attributes ''{1}'' or ''{2}''
ConfigParserHandler.cannot.contain=Element ''{0}'' can not contain both attributes ''{1}'' and ''{2}''
ConfigParserHandler.duplicate=Duplicate {0} ''{1}''
ConfigParserHandler.not.extend.class={0} {1} ''{2}'' does not extend class ''{3}''{4}
ConfigParserHandler.undefined.reference=Undefined ''{0}'' reference ''{1}''
ConfigParserHandler.at.line=, at line {0}
ConfigParserHandler.could.not.add.stream.parser=Could not add stream ''{0}'' parser ''{1}''\:
ConfigParserHandler.could.not.add.stream.reference=Could not add stream ''{0}'' referenced entity ''{1}''\:
ConfigParserHandler.could.not.init.obj.param=Could not initialize java-object ''{0}'' parameter ''{1}''\:
ConfigParserHandler.element.has.both3=Element ''{0}'' can not have both attribute ''{1}'' and element data value defined{2}
ConfigParserHandler.element.ref.missing=Element ''{0}'' has missing reference to ''{1}'' identified ''{2}''{3}
ConfigParserHandler.element.no.binding=Element ''{0}'' must follow after ''{1}'' definition{2}
ConfigParserHandler.field.has.no.locators=Field ''{0}'' has no locators defined to add ''{1}''
ConfigParserHandler.invalidRefType=Unsupported resource reference ''{0}'' type ''{1}''
ConfigParserHandler.invalidResource=Unsupported resource reference ''{0}'' URI extension ''{1}''
ConfigParserHandler.resource.load.error=Could not load resource reference ''{0}'' from URI ''{1}''
ConfigParserHandler.resource.file.not.found=Resource reference file not found\: uri\={0}, absolutePath\={1}
ConfigParserHandler.resource.ref.load=Loading resource reference ''{0}'' from\: {1}
ConfigParserHandler.unknown.tag=Malformed configuration\: Unknown element ''{0}''
ConfigParserHandler.unknown.attr=Malformed configuration\: Element ''{0}'' has unknown attribute ''{1}''
ConfigParserHandler.invalid.expression.token=Invalid expression\: Expression ''{0}'' has field value definition tokens not matching ''{1}'' or ''{2}'' pattern
ConfigParserHandler.malformed.configuration3=Malformed configuration\: ''{0}'' expected to have parent element

StreamsConfig.file.not.found=Could not find configuration files\: ''{0}''
StreamsConfig.files.not.found=Could not find configuration files\: ''{0}'' or ''{1}''

#StreamsConfigSAXParser.xml.validation.error=XML-XSD validation failure\: {0}
#StreamsConfigSAXParser.xml.validation.error=XML-XSD validation failure\: line\={0}; column\={1}; {2}\={3}
StreamsConfigSAXParser.xml.validation.error=Configuration XML-XSD validation failure\: {2}\:({0}, {1})  {3}

FileStreamStateHandler.file.error=Error saving progress due to problem reading last processed file\: {0}
FileStreamStateHandler.file.error.save=Error saving progress to configuration file\: {0}
FileStreamStateHandler.file.error.load=Error loading progress from configuration file\: {0}
FileStreamStateHandler.file.not.parsed=Could not parse configuration file\: {0}
FileStreamStateHandler.illegal.argument.file=Streamed files array for state persisting should not be empty.
FileStreamStateHandler.location.not.found=Could not find persisted polling file location.

ZKConfigInit.starting.main=Starting TNT4J-Streams configuration ZK uploader...
ZKConfigInit.upload.cfg.not.defined=Configuration file of TNT4J-Streams configuration upload to ZK not defined!..
ZKConfigInit.clearing.zk=Removing ZooKeeper contained TNT4J-Streams configuration under path\: {0}
ZKConfigInit.upload.error=Exception while uploading TNT4J-Streams configuration to ZK\: {0}
ZKConfigInit.invalid.args=Configuration file already defined. Can not use argument [-f\:] multiple times.
ZKConfigInit.loading.cfg.data=Loading TNT4J-Streams configuration file\: {0}
ZKConfigInit.loading.cfg.failed=Could not read data from file\: {0}
ZKConfigInit.help=\n\
  \Valid arguments\:\n\
  \      [-f\:<cfg_file_name>] [-c]\n\
  \where\:\n\
  \   -f      -  Load TNT4J-Streams configuration upload to ZooKeeper configuration from <cfg_file_name>\n\
  \   -c      -  Clean ZooKeeper contained TNT4J-Streams configuration

ZKConfigManager.props.load.error=Could not load TNT4J-Streams ZooKeeper configuration properties from file\: {0}
ZKConfigManager.node.changed=ZK node data has changed\: {0}
ZKConfigManager.node.deleted=ZK Node was deleted. Waiting for ZK node to be created\: {0}
ZKConfigManager.node.created=ZK node was created\: {0}
ZKConfigManager.node.exists.failed=Could not perform initial ZK node existence check on\: path=''{0}'', exc=''{1}''
ZKConfigManager.node.create.wait=Waiting for ZK node to be created\: {0}
ZKConfigManager.loading.cfg.file=Loading streams ZK configuration from file\: {0}
ZKConfigManager.connecting=Connecting to ZK ensemble...
ZKConfigManager.connected=Established ZK connection\: {0}
ZKConfigManager.loading.node.data=Loading configuration data from ZK node\: {0}
ZKConfigManager.cfg.loading.failed=Failed to load and apply ZK stored configuration data\: {0}
ZKConfigManager.loaded.props=Loaded {0} streams ZK configuration properties...
ZKConfigManager.resetting.cfg=No streams ZK configuration properties file provided. Clearing current configuration...
ZKConfigManager.empty.cfg.props=Connection configuration properties are empty. Will use default values...
ZKConfigManager.cfg.ent.setup.zk.path=Resolved configuration entity ''{0}'' configured ZK node path\: {1}
ZKConfigManager.cfg.ent.setup.file.path=Resolved configuration entity ''{0}'' configured cfg. file path\: {1}
ZKConfigManager.cfg.ent.setup.zk.path.empty=Configuration entity ''{0}'' resolved ZK node path is empty. Skipping setup...
ZKConfigManager.cfg.ent.setup.ok=Configuration entity ''{0}'' defined ZK node exists and has data. Nothing to do...
ZKConfigManager.cfg.ent.setup.setting=Setting configuration entity ''{0}'' defined ZK node data from file\: {1}
ZKConfigManager.cfg.ent.setup.updating=Updating configuration entity ''{0}'' defined ZK node data from file\: {1}

CfgStreamsBuilder.will.use.default.cfg=Will use default streams configuration file\: {0}

#package com.jkoolcloud.tnt4j.streams.fields
AbstractFieldEntity.adding.filter=Adding field entity ''{0}'' filter\: {1}
AbstractFieldEntity.adding.transformation=Adding field entity ''{0}'' transformation\: {1}
AbstractFieldEntity.value.before.transformations=Field entity ''{0}'' value before phase ''{1}'' transformations\: {2}
AbstractFieldEntity.value.after.transformation=Field entity ''{0}'' value after applying transformation ''{1}''\: {2}
AbstractFieldEntity.filtering.result=Field entity ''{0}'' filter ''{1}'' exclusion result\: {2}

ActivityField.field.type.name.empty=Activity field type name can not be empty
ActivityField.adding.stacked.parser=Activity field ''{0}'' adding stacked parser ''{1}'' reference
ActivityField.aggregating.field=Aggregating field ''{0}'' parser resolved value\: {1}
ActivityField.failed.parsing=Failed parsing field\: {0}, number of values does not match number of locators
ActivityField.multiple.enum.values=Field ''{0}'', multiple values are not supported for enumeration-based fields
ActivityField.aggregating.field.value=Aggregating activity entity field ''{0}'', value\={1}
ActivityField.field.empty.as.null=Field ''{0}'' aggregated value ''{1}'' is empty and gets reset to ''null''
ActivityField.transformation.failed=Failed to transform field ''{0}''\: value=''{1}'', exc=''{2}''
ActivityField.filtering.failed=Failed to evaluate filter expression for field ''{0}''\: value=''{1}'', exc=''{2}''
ActivityField.required.but.null=Required field ''{0}'' value after aggregation is ''null''

ActivityFieldLocator.mapped.default=Applying default mapping for locator type ''{0}''
ActivityFieldLocator.mapped.result=Mapped value ''{0}'' to ''{1}'' for locator type ''{2}''
ActivityFieldLocator.numeric.locator.positive=Numeric locator must be >= 0
ActivityFieldLocator.invalid.numeric.locator=Invalid Numeric locator value\: ''{0}''
ActivityFieldLocator.invalid.range.locator=Invalid Range locator value\: ''{0}''
ActivityFieldLocator.mapping.add.error=Could not add field value mapping from ''{0}'' to ''{1}'' as ''{2}''
ActivityFieldLocator.setting.default.locator.type=Setting default locator ''{0}'' type ''{1}''

ActivityInfo.applying.field=Applying field ''{0}'' parser resolved value\: {1}
ActivityInfo.field.value.null=Field ''{0}'' resolves to ''null'' value. Will not apply field to activity...
ActivityInfo.unrecognized.field=Unrecognized Activity field\: {0}
ActivityInfo.set.field=Setting field ''{0}'' value to ''{1}''
ActivityInfo.set.property=Setting property ''{0}'' value to ''{1}'' (type ''{2}'')
ActivityInfo.replace.property=Setting property ''{0}'' value to ''{1}'' (type ''{2}'') replacing map entry\: ''{3}''
ActivityInfo.tracker.null=Tracker must be non-null
ActivityInfo.invalid.child=Conflicting relation between child ''{0}:({3})'' and parent ''{1}:({4})''. ''{1}'' can have [{2}] as child entity...
ActivityInfo.caching.field.value=Caching field ''{0}'' as ''{1}'', value\={2}
ActivityInfo.formatting.arguments.mismatch=Field ''{3}'' value formatting pattern ''{0}'' refers {1} argument, while arguments array length is {2}
ActivityInfo.activity.has.no.name=Activity entity ''{0}:{1}'' has no name defined! Setting default\: {2}
ActivityInfo.invalid.child.field.locator=Invalid child field locator\: pattern=''{0}'', value=''{1}''
ActivityInfo.child.field.locator.parent.not.found=Activity entity has no parent entity for child locator ''{0}''
ActivityInfo.child.field.locator.children.bounds=Activity entities group ''{0}'' child {1} defined by child field locator ''{2}'' is out of children set bounds\: {3}
ActivityInfo.filtered.child=Skipping incomplete or filtered out child activity entity\: {0}
ActivityInfo.duplicate.child=Found duplicate child having same tracking identifier ''{0}'': child1={1}, child2={2}
ActivityInfo.building.trackable=Building trackable from activity data: tracker={0}, type={1}, id={2}

StreamFieldType.invalid.ordinal=Invalid field type ordinal {0}.{1} (range\: 0-{2})
StreamFieldType.invalid.name=Invalid field type name {0}.{1}
StreamFieldType.not.defined={0} does not have a defined enumeration set

#package com.jkoolcloud.tnt4j.streams.filters
DefaultValueFilter.empty.value=Filter value definition can not be empty or ''null''
DefaultValueFilter.unsupported.operation=This filtering operation is not supported

ExpressionFilter.filtering.failed=Failed to apply filter\: {0}
ExpressionFilter.unknown.language=Could not find expression based filter bean for language ''{0}''
ExpressionFilter.empty.expression=Filter expression definition can not be empty or ''null''
ExpressionFilter.evaluation.result=Filtering expression {0} evaluated as\: {1}
ExpressionFilter.invalid.script=Filter has invalid ''{0}'' script code expression\: {1}

#package com.jkoolcloud.tnt4j.streams.inputs.feeds
AbstractFeed.read.line=Stream feed reader read RAW data line\: {0}
AbstractFeed.read.bytes=Stream feeder read RAW data bytes\: {0}
AbstractFeed.read.closed=Stream feeder is already closed!..

#package com.jkoolcloud.tnt4j.streams.inputs
FeedInputStream.cannot.have.multiple.parsers=FeedInputStream can have only one parser referenced
FeedInputStream.skipping.remaining.parsers=FeedInputStream took only first parser from provided collection. Remaining are ignored\!..
FeedInputStream.waiting.for.connection=Waiting for socket connection on port\: {0}
FeedInputStream.accepted.connection=Accepted connection, reading data from socket\: {0}
FeedInputStream.stream.still.open=Stream is still open
FeedInputStream.no.stream.source=Input stream source type not specified
FeedInputStream.no.stream.reader=RAW data input source is not set
FeedInputStream.resetting.stream=Resetting feed stream for {0}\!..
FeedInputStream.stream.reset=Feed stream ''{0}'' has been reset\!..
FeedInputStream.reader.terminated=Stream RAW data input source has been terminated\!..
FeedInputStream.closing.stream.connection=Closing stream for connection {0}\!..
FeedInputStream.file.not.found=File not found\: {0}
FeedInputStream.no.more.files=No more files available to read\!..
FeedInputStream.input.start.failed=Failed to start feed stream input\: {0}
FeedInputStream.opening.file=Reading data from file\: {0}

FileLineStream.initializing.stream=Initializing stream using file name\: {0}
FileLineStream.reading.changes=Reading changes of file ''{0}'' from line {1}
FileLineStream.reading.no.file=No file to read!
FileLineStream.cant.access=Can not access file\! Trying to swap to next file...
FileLineStream.next.not.found=Next file not found\! Interrupting streaming... Cause: {0}
FileLineStream.file.updated=File updated {0} sec. ago. Time since last file changes reading\: {1} sec.
FileLineStream.no.changes=No changes available... {0}
FileLineStream.error.rolling=Error occurred while rolling to marked file line\: {0}
FileLineStream.error.reading=Error reading new file entries\: {0}
FileLineStream.swapping.to.next=Swapping to next available file\: {0}
FileLineStream.reader.error=Could not initialize reader for file\! Interrupting streaming...
FileLineStream.file.shorter=Looks like file got shorter, stopped reading at line {0} out of {1}...
FileLineStream.swapping.to.previous=Swapping to position at line {0} of previous found file\: {1}
FileLineStream.error.reading.changes=Error occurred while reading changes\: {0}
FileLineStream.changes.read.end=Stopped reading file ''{0}'' at line {1}: last iteration read {2} lines
FileLineStream.waiting=Waiting {0} sec. until next poll...
FileLineStream.found.files=Found {0} files matching file name pattern\: {1}
FileLineStream.no.previous=No previous file available...
FileLineStream.no.next=No next file available...
FileLineStream.stream.file.watcher.initialized=Stream ''{0}'' file watcher initialized to read file ''{1}'' at line {2}
FileLineStream.resetting.reader=Resetting file reader to position at line {0}...
FileLineStream.will.swap.to.next=Will be swapping to next available file using file name pattern\: {0}
FileLineStream.will.swap.to.previous=Will be swapping to previous available file using file name pattern\: {0}
FileLineStream.file.not.changed=File not changed since last read!..
FileLineStream.swapping.failed=File swapping failed\: {0}

TNTInputStream.failed.to.process=Failed to process activity data at position {0}
TNTInputStream.starting=Starting stream ''{0}''...
TNTInputStream.data.stream.ended=Stream ''{0}'' data input ended ...
TNTInputStream.no.parser=No parser accepted message\: {0}
TNTInputStream.will.retry=Will retry in {0} seconds
TNTInputStream.failed.record.activity.at=Failed to record activity at position {0}\: {1}
TNTInputStream.fatal.stream.failure=Stream ''{0}'' FATAL failure has occurred\: {1}
TNTInputStream.thread.ended=Thread {0} ended
TNTInputStream.no.owner.thread=Owner thread has not been set
TNTInputStream.tasks.buffer.limit=Activity processing task was not accepted by executor service over {0} seconds\!..
TNTInputStream.property.undefined=Required stream property {0} is not defined
TNTInputStream.property.undefined.one.of=Requires one of stream properties\: {0} or {1}
TNTInputStream.could.not.parse.activity=Could not parse activity data\: {0}
TNTInputStream.stream.statistics=Stream statistics\: {0}
TNTInputStream.stream.out.statistics=Stream ''{0}'' output statistics\: {1}
TNTInputStream.output.undefined=Stream output is not defined from configuration, setting default...
TNTInputStream.stream.ready={0} stream ''{1}'' initialized\!..
TNTInputStream.stream.start={0} stream ''{1}'' is ready to receive data...
TNTInputStream.cannot.set.both=Can not set both {0} and {1}
TNTInputStream.tracker.check.state.failed=Tracker or tracker event sink is not opened. Check TNT4J tracker configuration\!..
TNTInputStream.property.illegal=Stream property {0}\={1} is not supported or illegal
TNTInputStream.activity.filtered.out=Skipping incomplete or filtered out activity entity streaming\: {0}
TNTInputStream.failed.cleanup.stream=Failed to cleanup stream\: {0}
TNTInputStream.parser.match=Stream ''{0}'' parser ''{1}'' match evaluation\: dataMatch\={2}, tagsMatch\={3}, expMatch\={3}
TNTInputStream.has.no.parsers.bound=Stream ''{0}'' has no any parsers bound!..

AbstractBufferedStream.changes.buffer.limit=Input buffer is full and stream entry is skipped\: {0}
AbstractBufferedStream.changes.buffer.uninitialized=Queue of input buffer is not initialized\!..
AbstractBufferedStream.put.interrupted=Input buffer put is interrupted and stream entry is skipped\: {0}
AbstractBufferedStream.input.close.error=Exception occurred while closing stream input processor\: {0}
AbstractBufferedStream.input.shutdown=Shutting down stream ''{0}'' input processor\: {1}
AbstractBufferedStream.input.start.failed=Could not start input data reception\: {0}
AbstractBufferedStream.can.stop=Stream ''{0}'' stop check: idling={1}, ended={2}, processing={3}

HttpStream.connection.timed.out=Connection timed out
HttpStream.http.server.exception=HTTP server exception\: {0}
HttpStream.ok=OK
HttpStream.activities.buffer.size.limit=Activities buffer size limit is reached and activity entry is skipped\!..
HttpStream.no.activity=No activity content found\!..
HttpStream.bad.http.request=Bad HTTP request found. Does not have HttpEntity\!.. Use POST method\!..

PipedStream.raw.stream.not.opened=Piped RAW data input is not opened for reading

ZipLineStream.initializing.stream=Initializing Zip stream using file name\: {0}
ZipLineStream.opening.entry=Opening Zip file entry\: {0}
ZipLineStream.zip.input.not.opened=Zip input is not opened for reading

JavaInputStream.input.not.opened=Java input stream/reader is not opened for reading

RedirectTNT4JStream.redirect.empty.input=Empty data package read from input\! Skipping...
RedirectTNT4JStream.sending.item=Redirecting\: {0}
RedirectTNT4JStream.resetting.stream=Resetting stream {0}\!
RedirectTNT4JStream.resetting.failed=Stream {0} resetting failed\: {1}
RedirectTNT4JStream.stream.reset=Stream has been reset on port {0}\!..
RedirectTNT4JStream.failed.accept.connection=Failed to accept socket connection\: {0}
RedirectTNT4JStream.socket.initialization=Failed to initialize socket connection feeder\: {0}
RedirectTNT4JStream.feeder.data.ended=Feeder data input ended...
RedirectTNT4JStream.feeder.failure=Feeder failed to read/buffer activity data\: {0}

SocketInputStream.waiting.for.connection=Waiting for socket connection on port\: {0}
SocketInputStream.accepted.connection=Accepted connection, reading data from socket\: {0}
SocketInputStream.failed.connection=Failed to initiate socket connection\: {0}
SocketInputStream.failed.read=Failed to read socket ''{0}'' transmitted data\: {1}
SocketInputStream.closing.connection=Closing socket connection {0}\!..

StreamThreadGroup.stopping.thread=Waiting on orphan thread to stop\: ''{0}''
StreamThreadGroup.stopped.thread=Orphan thread ''{0}'' state after stop\: alive={1}, took {2}ms.
StreamThreadGroup.killing.thread=Killing orphan thread\: ''{0}''
StreamThreadGroup.killed.thread=Killed orphan thread\: ''{0}'', took {1}ms.

#package com.jkoolcloud.tnt4j.streams.management
StreamsAgentMBean.object.name.failure=Failed to build ObjectName for StreamsAgentMBean\: {0}
MBeansManager.register.fail=Unable to register MBean\: {0}
MBeansManager.already.registered=Detected duplicate registering of MBean\: {0}
MBeansManager.unregister.fail=Unable to un-register MBean\: {0}
MBeansManager.not.registered=Detected duplicate un-registering of MBean\: {0}

#package com.jkoolcloud.tnt4j.streams.matchers
Matchers.expression.invalid=Invalid match expression\: {0}
Matchers.expression.empty=Match evaluation expression part is empty within\: {0}
StringMatcher.no.such.method=No such method found\: {0}

#package com.jkoolcloud.tnt4j.streams.outputs
TNTStreamOutput.tracker.not.opened=Tracker is not opened to record activity data...
TNTStreamOutput.failed.to.open=Stream output ''{0}'' failed to open tracker\: tracker=''{1}'', exc=''{2}''
TNTStreamOutput.built.new.tracker=Stream output ''{0}'' built new tracker instance ''{1}'' for thread ''{2}''\: {3}
TNTStreamOutput.init.cfg.file=Stream output ''{0}'' initializing `tnt4j` configuration from file\: {1}
TNTStreamOutput.zk.cfg.monitor.tnt4j=Stream output ''{0}'' initializing `tnt4j` configuration monitoring on ZK node\: {0}
TNTStreamOutput.retry.successful=Activity got recorded on {0} retry attempt\!
TNTStreamOutput.recording.failed=Failed recording activity. Reason\: {0}
TNTStreamOutput.recording.failed.activity=Failed to record activity data\: {0}
TNTStreamOutput.will.retry=Will retry activity recording in {0} seconds
TNTStreamOutput.null.activity=Skipping ''null'' activity from sending...
TNTStreamOutput.tracker.statistics=Stream output ''{0}'' tracker ''{1}'' statistics before close\: {2}
TNTStreamOutput.tracker.close=Closing stream output ''{0}'' tracker ''{1}''\: {2}
TNTStreamOutput.tracker.drop.detected=Detected tracker ''{0}'' activity package drop without sink transmission error
TNTStreamOutput.check.retry.successful=Tracker ''{0}'' got opened on {1}/{2} retry attempt\!..
TNTStreamOutput.check.failed=Failed tracker ''{0}'' state check. Reason\: {1}
TNTStreamOutput.check.will.retry=Will retry tracker ''{0}'' state check {1}/{2} in {3} seconds
TNTStreamOutput.status.msg=Stream ''{0}'' session status is ({1})!
TNTStreamOutput.status.msg.sent=Stream session status ({0}) message sent!
TNTStreamOutput.status.msg.failed=Failed to send stream session status ({0}) message. Check your settings !!!
TNTStreamOutput.tracker.reopen=Reopening tracker ''{0}''...
TNTStreamOutput.tracker.reopen.failed=Failed to reopen tracker ''{0}''\: {1}

NullActivityOutput.log.item=Sending to ''null'' output\: {0}

#package com.jkoolcloud.tnt4j.streams.parsers
ActivityParser.adding.field=Adding field ''{0}''
ActivityParser.removing.field=Removing field ''{0}''
ActivityParser.data.unsupported=RAW activity data in the format of a ''{0}'' is not supported
ActivityParser.data.end=Reached end of ''{0}'' RAW activity data stream\: {1}
ActivityParser.error.reading=Error reading from ''{0}'' RAW activity data stream\: {1}
ActivityParser.setting=Setting ''{0}'' to ''{1}''
ActivityParser.input.not.match=Input does not match pattern ''{1}'' defined in parser ''{0}''
ActivityParser.activity.raw.data=RAW activity data\: {0}
ActivityParser.preparsed.data=Activity data after pre-parsing\: {0}
ActivityParser.parsing.data=Parsing\: {0}
ActivityParser.nothing.to.parse=Parser ''{0}'' got nothing to parse from RAW/prepared activity data\!..
ActivityParser.parsing.failed=Failed parsing data for field ''{0}''
ActivityParser.ignoring=Ignoring property ''{0}\={1}''
ActivityParser.split=Split input into {0} fields
ActivityParser.splitting.string=Input string to split\: {0}
ActivityParser.no.fields=No fields found in parsed activity data or parser has suppressed/filtered activity data
ActivityParser.unsupported.locator=Field ''{0}'' locator type ''{1}'' not supported by parser ''{2}''
ActivityParser.fields.failed=Name locators size and parsed value array size must match\!
ActivityParser.duplicate.field=Parser ''{0}'' already has field named ''{1}''
ActivityParser.locator.resolved=Field ''{0}'' locator ''{1}'' resolved value\: {2}
ActivityParser.transformation.failed=Failed to transform locator ''{0}''\: value=''{1}'', exc=''{2}''
ActivityParser.field.filtering.failed=Failed to evaluate filter expression for locator ''{0}''\: value=''{1}'', exc=''{2}''
ActivityParser.activity.filtering.failed=Failed to evaluate filter expression for activity information data\: activityData=''{0}'', exc=''{1}''
ActivityParser.adding.filter=Adding activity filter\: {0}
ActivityParser.removing.filter=Removing activity filter ''{0}''
ActivityParser.pre.parsing.failed=Pre-parsing activity data of type ''{0}'' failed\: {1}
ActivityParser.data.before.pre.parsing=Activity data before pre-parsing\: {0}
ActivityParser.data.after.pre.parsing=Activity data after pre-parsing step\: {0}
ActivityParser.pre.parsing.data=Pre-parsing activity data using\: {0}
ActivityParser.pre.parsing.invalid=Pre-parser ''{0}'' can not process activity data\: typeValid={1}, logicalTypeValid={2}, data={3}
ActivityParser.stacked.parser.applying=Parser ''{0}'' field ''{1}'' will try to apply stacked parser ''{2}''
ActivityParser.stacked.parser.applied=Parser ''{0}'' field ''{1}'' stacked parser ''{2}'' application status\: applied\={3}
ActivityParser.stacked.parser.failed=Parser ''{0}'' field ''{1}'' failed to apply stacked parser ''{2}''\: {3}
ActivityParser.stacked.parsers.missed=None of parser ''{0}'' field ''{1}'' stacked parsers was applied
ActivityParser.stacked.parser.input.value.type=Parser ''{0}'' field ''{1}'' stacked parser ''{2}'' input value type\: {3}
ActivityParser.unsupported.reference=Parser ''{0}'' will not reference unsupported object\: {1}
ActivityParser.applying.field=Applying parser ''{0}'' resolved field value\: {1}\={2}
ActivityParser.stacked.parser.match=Stacked parser ''{0}'' match evaluation\: dataMatch\={1}, tagsMatch\={2}, expMatch\={3}
ActivityParser.filtering.result=Parser ''{0}'' filter ''{1}'' activity entity filtering out result\: {2}
ActivityParser.required.locator.not.found=Required locator ''{0}'' value not resolved for field ''{1}''
ActivityParser.locator.empty.as.null=Locator ''{0}'' resolved value ''{1}'' is empty and gets reset to ''null''
ActivityParser.field.empty.as.null=Field ''{0}'' resolved value ''{1}'' is empty and gets reset to ''null''
ActivityParser.cyclic.field.dependency=Field ''{0}'' has cyclic references...
ActivityParser.unknown.field.reference=Field ''{0}'' has unknown reference ''{1}''
ActivityParser.fields.user.order=Fields order defined by user config: ''{0}''
ActivityParser.fields.auto.order=Fields order after auto arrangement: ''{0}''
ActivityParser.stacked.field.conflict=Parser ''{0}'' field ''{1}'' may have conflicting field reference\: ''{2}.{3}'' <-> ''{4}.{5}''

ActivityJavaObjectParser.resolve.locator.value.failed=Failed to resolve Java object (POJO) field/method value\: {0}
ActivityJavaObjectParser.resolve.class.failed=Failed to resolve object class\: className={0}, reason={1}
ActivityJavaObjectParser.adding.supported.class=Adding supported class ''{0}''

ActivityNameValueParser.no.field.delimiter=Field delimiter not specified
ActivityNameValueParser.no.value.delimiter=Value delimiter not specified
ActivityNameValueParser.found.delim=Found Name/Value\: {0}
ActivityNameValueParser.found.regex=Found Name/Value\: {0}\={1}

ActivityRegExParser.no.regex.pattern=Regular expression pattern not specified or empty
ActivityRegExParser.conflicting.mapping=Conflicting mapping for ''{0}''
ActivityRegExParser.applying.regex=Applying RegEx Match mappings, count\={0}
ActivityRegExParser.match=Adding RegEx match map entry\: {0}\={1}
ActivityRegExParser.found.matches=Found {0} RegEx matches
ActivityRegExParser.failed.parsing.regex=Failed parsing activity data using RegEx for field ''{0}''
ActivityRegExParser.failed.parsing.matches=Failed resolving activity data RegEx matches

ActivityStringParser.range.exception=Exception occurred while parsing substring range\:

ActivityTokenParser.no.field.delimiter=Field delimiter not specified or empty

ActivityXmlParser.adding.mapping=Adding ''{0}'' mapping ''{1}''
ActivityXMLParser.xPath.exception=Exception occurred while processing XPath expression\:
ActivityXmlParser.xmlDocument.parse.error=Can not build XML DOM document from input\:
ActivityXmlParser.xmlDocument.toString.error=Can not deserialize XML DOM document to string\: {0}

ActivityJsonParser.jsonDocument.parse.error=Can not build JSON Document Context from input stream\:
ActivityJsonParser.path.exception=JSON path read exception for locator ''{0}''\: {1}

MessageType.illegal.num.value=Value ''{0}'' is not valid for enumeration {1}
MessageType.illegal.obj.value=Can not convert object of type ''{0}'' to enum {1}
MessageType.object.null=Object must be non-null

#package com.jkoolcloud.tnt4j.streams.preparsers
XMLFromBinDataPreParser.skip.failed=Could not skip {0} bytes in RAW data input stream\: {0}
XMLFromBinDataPreParser.found.element=Element found\: {0}
XMLFromBinDataPreParser.skipping=Skipping characters range\: {0} - {1}, {2} symbols
XMLFromBinDataPreParser.doc.init.failure=Can''t initialize new document
XMLFromBinDataPreParser.reader.init.failure=Failed to initialize Reader Input Stream
XMLFromBinDataPreParser.input.unsupported=Input data not supported
XMLFromBinDataPreParser.init.failure=Initiation failed
XMLFromBinDataPreParser.bin.data.parse.failure=IO error
XMLFromBinDataPreParser.data.read.failed=Failed to read data bytes from input stream\: {0}

TransformationPreParser.ref.must.implement=Pre-parser ''{0}'' configuration property ''{1}'' referenced bean must implement interface ''{2}''
TransformationPreParser.config.has.both=Pre-parser ''{0}'' configuration property ''{1}'' can''t be in pair with ''{2}''
TransformationPreParser.missing.transformation.definition=Pre-parser ''{0}'' configuration is missing required property\: ''{1}'' or ''{2}''
TransformationPreParser.will.use.bean.transformation=Pre-parser ''{0}'' will use transformation bean\: {1}
TransformationPreParser.will.use.script.transformation=Pre-parser ''{0}'' will use transformation script\: {1}

JsonLayoutTransformationPreParser.missing.transformation.definition=Pre-parser ''{0}'' configuration is missing required property\: ''{1}''
JsonLayoutTransformationPreParser.invalid.transformation.definition=Pre-parser ''{0}'' configuration defined JSLT expression is invalid, cause\: {1}
JsonLayoutTransformationPreParser.jslt.expression.not.initialized=JSLT expression not initialized!..

#package com.jkoolcloud.tnt4j.streams.reference
MatchingParserReference.field.match.evaluation=Parser ''{0}'' field ''{1}'' stacked parser ''{2}'' match expression ''{3}'' evaluated as\: {4}
MatchingParserReference.field.match.evaluation.failed=Parser ''{0}'' field ''{1}'' stacked parser ''{2}'' match expression ''{3}'' evaluation failed\: {4}
MatchingParserReference.stream.match.evaluation=Stream ''{0}'' parser ''{1}'' match expression ''{2}'' evaluated as\: {3}
MatchingParserReference.stream.match.evaluation.failed=Stream ''{0}'' parser ''{1}'' match expression ''{2}'' evaluation failed\: {3}

#package com.jkoolcloud.tnt4j.streams.sink.filters
EventMatchExpressionFilter.empty.match.expression=Routing match expression not defined
EventMatchExpressionFilter.match.evaluation.failed=Routing match expression evaluation failed\: exp={0}, {1}

#package com.jkoolcloud.tnt4j.streams.transform
ValueTransformation.transformation.failed=Failed to apply transformation ''{0}'' on phase ''{1}''
ScriptTransformation.unknown.language=Could not find script based transformation bean for language ''{0}''
ScriptTransformation.unknown.phase=Could not resolve transformation application phase ''{0}''
ScriptTransformation.evaluation.result=Transformation expression {0} evaluated as\: {1}
ScriptTransformation.invalid.script=Transformation ''{0}'' has invalid script code\: {1}

#package com.jkoolcloud.tnt4j.streams.utils
StreamsThread.wait.for=Completed waiting for thread ''{0}'' to die in {1} msec.
StreamsThread.sleepFully.interrupted=Sleep interrupted (count\={0}), after {1} msec. (initial\={2})
StreamsThread.sleepFully.remaining=\   Going back to sleep for {0} msec.
StreamsThread.halt=Signaled to terminate {0}
StreamsThread.stop=Signaled to stop {0}
StreamsThread.sleep.interrupted=Sleep interrupted after {0} msec. (initial\={1})

TimestampFormatter.unsupported.pattern=Unsupported date/time pattern\: dataType\={0}, units\={1}, pattern\={2}, locale\={3}
TimestampFormatter.failed.parsing=Failed to parse date/time value ''{0}''\: {1}
TimestampFormatter.failed.parsing2=Failed to parse date/time value "{0}" using pattern(s) "{1}"
TimestampFormatter.invalid.format.state=Formatter is not set to format date, parse only!..

Range.range.string.empty=Range definition string is empty

LoggerUtils.unknown.logger=Unknown logger. Can not apply new logger configuration...
LoggerUtils.log4j.load.error=Could not load LOG4J properties\: {0}
LoggerUtils.log4j.empty.configuration=Loaded LOG4J logger configuration properties are empty!..
LoggerUtils.log4j.reconfiguring=Reconfiguring LOG4J logger. Loaded {0} logger properties...
LoggerUtils.log4j.reconfiguring.fail=Could not apply new LOG4J configuration\: {0}
LoggerUtils.log4j.reconfiguring.end=LOG4J logger reconfiguration completed...
LoggerUtils.jul.reconfiguring=Reconfiguring JUL logger...
LoggerUtils.jul.reconfiguring.fail=Could not apply new JUL configuration\: {0}
LoggerUtils.jul.reconfiguring.end=JUL logger reconfiguration completed...
LoggerUtils.logback.reconfiguring=Reconfiguring LOGBACK logger...
LoggerUtils.logback.reconfiguring.fail=Could not apply new LOGBACK configuration\: {0}
LoggerUtils.logback.reconfiguring.end=LOGBACK logger reconfiguration completed...
LoggerUtils.log4j2.reconfiguring=Reconfiguring LOG4J2 logger...
LoggerUtils.log4j2.reconfiguring.fail=Could not apply new LOG4J2 configuration\: {0}
LoggerUtils.log4j2.reconfiguring.end=LOG4J2 logger reconfiguration completed...

Utils.empty.file.descriptor=Provided file descriptor is empty
Utils.empty.file.name=Provided file path/name is empty
Utils.name.empty=Name must be not empty
Utils.no.enum.constant=No enum constant {1}.{0}
Utils.could.not.get.declared.field=Could not get declared field/method ''{0}'' value from ''{1}'' class object\: ''{2}''
Utils.illegal.boolean.value=Illegal boolean value for string\: {0}

CharBufferParser.unexpected.char=Unexpected character found at {0}\: wanted ''{1}'', found ''{2}''
CharBufferParser.unexpected.str=Unexpected string found at {0}\: wanted ''{1}'', found ''{2}''

StreamsCache.entry.marshal=Marshaling map entry\: {0}\={1}
StreamsCache.entry.marshal.skip=Skipping transient map entry marshaling\: {0}\={1}
StreamsCache.entry.unmarshal=Unmarshaling map entry\: {0}\={1}
StreamsCache.loading.file=Loading cache entries from file \:{0}
StreamsCache.loading.file.not.found=File containing persisted cache not found!..
StreamsCache.loading.done=Loaded {0} cache entries from file\: {1}
StreamsCache.loading.failed=Cache loading failed\: {0}
StreamsCache.persisting.file=Saving cache entries to file\: {0}
StreamsCache.persisting.done=Saved {0} cache entries to file\: {1}
StreamsCache.persisting.failed=Cache saving failed\: {0}
StreamsCache.default.value.conversion.failed=Failed to convert default entry value\: type={1}, value={0}

#package com.jkoolcloud.tnt4j.streams.custom.inputs
CustomStream.no.activity.data=No activity data found to parse. JSON\: ''{0}''
CustomStream.no.json.data=No JSON data found

#package com.jkoolcloud.tnt4j.streams.custom.parsers
ApacheAccessLogParser.setting.regex.mapping=Setting Apache access log parsing RegEx mapping {0} from ''{1}'' to ''{2}''
ApacheAccessLogParser.regex.made=Made Apache access log parser ''{0}'' RegEx\: ''{1}''
ApacheAccessLogParser.could.not.make.regex=Could not make Apache access log parser ''{0}'' RegEx for pattern\: ''{0}''

SnapshotsJsonParser.no.snapshots=Snapshots parser named ''{0}'' resolved no snapshots from field ''{1}''\!..
SnapshotsJsonParser.no.snapshot.parser=No parser accepted snapshot data\: {0}

IBMMQLogParser.log.entry.parse.failed=Could not parse IBM MQ err log entry\: {0}

#package com.jkoolcloud.tnt4j.streams.custom.dirStream
DirWatchdog.empty.dir.path=Path of directory to watch must be non-empty

DirStreamingManager.job.offer.interrupted=Streaming job ''{0}'' adding to executor queue was interrupted\: {1}
DirStreamingManager.dir.monitoring.started=Directory ''{0}'' monitoring for files ''{1}'' has started...
DirStreamingManager.could.not.start.watchdog=Could not start directory watchdog\: {0}
DirStreamingManager.could.not.stop.watchdog=Could not stop directory watchdog correctly\: {0}
DirStreamingManager.job.created=Job config created {0}
DirStreamingManager.job.changed=Job config changed {0}
DirStreamingManager.job.deleted=Job config deleted {0}
DirStreamingManager.job.id.not.found=Job identifier not defined in configuration file name ''{0}''. Skipping...
DirStreamingManager.job.cancel=Job cancel requested for {0}
DirStreamingManager.job.cancel.checking.running=Will be checking running jobs for {0}
DirStreamingManager.job.cancel.running=Canceling running job {0}
DirStreamingManager.job.cancel.checking.pending=Will be checking pending jobs for {0}
DirStreamingManager.job.cancel.pending=Canceling pending job {0}
DirStreamingManager.job.cancel.completed=Job cancel completed {0}, jobs left {1}
DirStreamingManager.job.not.found=Pending or running Job not found {0}
DirStreamingManager.job.running=Checking running job {0}
DirStreamingManager.job.pending=Checking pending job {0}
DirStreamingManager.job.add.running=Adding job {0} to running tasks list
DirStreamingManager.job.remove.running=Removing job {0} from running tasks list

DefaultStreamingJob.item.log.finished=Activity item logged
DefaultStreamingJob.item.recorded=Activity item entity recorded

#### END ###