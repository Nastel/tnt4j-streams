<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TNTDataSourceWS" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:redefine schemaLocation="https://raw.githubusercontent.com/Nastel/tnt4j-streams/master/config/tnt-data-source.xsd">
        <xs:complexType name="Stream">
            <xs:complexContent>
                <xs:extension base="Stream">
                    <xs:sequence>
                        <xs:element name="scenario" type="Scenario" minOccurs="1" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>
                                    Defines scenario steps set for WS type streams to define request/command data and request/command
                                    invocation schedule expression.
                                </xs:documentation>
                            </xs:annotation>
                            <!-- Make sure <request><parser-ref=""/></request> points to valid <parser> name -->
                            <!--<xs:keyref name="ValidRequestParserRef" refer="tnt-data-source:UniqueParserName">-->
                            <!--<xs:selector xpath="step/request"/>-->
                            <!--<xs:field xpath="@parser-ref"/>-->
                            <!--</xs:keyref>-->
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:redefine>

    <!-- Common scheduler attributes group definition -->
    <xs:attributeGroup name="SchedulerAttributeGroup">
        <xs:annotation>
            <xs:documentation>
                Defines attributes common to all scheduler entities.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="startDelay" use="optional" type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>
                    Scheduler start delay interval.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="startDelayUnits" use="optional" type="UnitsTypes" default="Seconds">
            <xs:annotation>
                <xs:documentation>
                    Scheduler start delay time units name.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>

    <!-- Element <schedule-cron> definition -->
    <xs:complexType name="ScheduleCron">
        <xs:annotation>
            <xs:documentation>
                Defines Cron scheduler parameters.
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="expression" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Cron expression.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attributeGroup ref="SchedulerAttributeGroup">
            <xs:annotation>
                <xs:documentation>
                    Defines scheduler start delay values.
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>

    <!-- Element <schedule-simple> definition -->
    <xs:complexType name="ScheduleSimple">
        <xs:annotation>
            <xs:documentation>
                Defines simple scheduler parameters.
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="interval" use="required" type="xs:positiveInteger">
            <xs:annotation>
                <xs:documentation>
                    Repeat interval.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="units" use="optional" type="UnitsTypes" default="Seconds">
            <xs:annotation>
                <xs:documentation>
                    Repeat interval time units name.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="repeatCount" use="optional" type="xs:integer" default="1">
            <xs:annotation>
                <xs:documentation>
                    Repeat iterations count. -1 means infinitely.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attributeGroup ref="SchedulerAttributeGroup">
            <xs:annotation>
                <xs:documentation>
                    Defines scheduler start delay values.
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>

    <!-- Scenario element <step> definition -->
    <xs:complexType name="ScenarioStep">
        <xs:annotation>
            <xs:documentation>
                Defines scenario step providing request/command params and scheduler.
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="property" type="Property" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Specifies step configuration property.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element name="schedule-cron" type="ScheduleCron" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Defines Cron type scheduler.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="schedule-simple" type="ScheduleSimple" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            Defines simple type scheduler.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
            <xs:element name="request" type="RequestType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Request (or command/query/etc.) data.
                    </xs:documentation>
                </xs:annotation>

                <!-- Make sure <req-param> identifiers are unique -->
                <xs:unique name="UniqueReqParamId">
                    <xs:selector xpath="req-param"/>
                    <xs:field xpath="@id"/>
                </xs:unique>
            </xs:element>
        </xs:sequence>

        <xs:attributeGroup ref="ScenarioEntityAttributes">
            <xs:annotation>
                <xs:documentation>
                    Defines common scenario step attributes.
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>

    </xs:complexType>

    <!-- Common attributes used by scenario/step -->
    <xs:attributeGroup name="ScenarioEntityAttributes">
        <xs:annotation>
            <xs:documentation>
                Defines attributes common for WS configuration entities: scenario, step, etc.
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="name" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Name of scenario entity.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="url" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Service endpoint URL.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="method" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Request method.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="username" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    User name used to perform request if service authentication is needed.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="password" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Password used to perform request if service authentication is needed.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

    </xs:attributeGroup>

    <!-- Element <request> definition -->
    <xs:complexType name="RequestType" mixed="true">
        <xs:annotation>
            <xs:documentation>
                Defines scenario step request (or command/query/etc.) data.
            </xs:documentation>
        </xs:annotation>

        <!--<xs:simpleContent>-->
        <!--<xs:extension base="xs:string">-->
        <!--<xs:attribute name="parser-ref" use="optional" type="xs:string">-->
        <!--<xs:annotation>-->
        <!--<xs:documentation>-->
        <!--References parser used to parse request (or command/query/etc.) received response data.-->
        <!--</xs:documentation>-->
        <!--</xs:annotation>-->
        <!--</xs:attribute>-->
        <!--</xs:extension>-->
        <!--</xs:simpleContent>-->

        <xs:sequence>
            <xs:element name="req-param" type="ReqParameterType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Request (or command/query/etc.) parameter.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="condition" type="ConditionType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Request condition definition.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element name="parser-ref" type="ParserReference" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        References parser used to parse request (or command/query/etc.) received response data.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>

        <xs:attribute name="id" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Request identifier.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Element <req-param> definition -->
    <xs:complexType name="ReqParameterType">
        <xs:annotation>
            <xs:documentation>
                Defines scenario step request (or command/query/etc.) parameter.
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="id" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Parameter identifier.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="value" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Parameter value.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="type" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Parameter value type.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="format" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Parameter value format.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="transient" use="optional" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    Parameter transiency flag indicating whether to add parameter to service request or just keep it to be used between
                    request/response mapping.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Element <condition> definition -->
    <xs:complexType name="ConditionType">
        <xs:annotation>
            <xs:documentation>
                Defines scenario step request state condition.
            </xs:documentation>
        </xs:annotation>

        <xs:choice maxOccurs="unbounded">
            <xs:element name="matchExp" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines evaluation match expression to check if request context matches it.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>

        <xs:attribute name="id" use="optional" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Condition identifier.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="resolution" use="required" type="ResolutionsAll">
            <xs:annotation>
                <xs:documentation>
                    Condition resolution.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Condition resolutions enumeration definition -->
    <xs:simpleType name="Resolutions">
        <xs:annotation>
            <xs:documentation>
                Set of predefined TNT4J-Streams condition resolution values.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="SKIP">
                <xs:annotation>
                    <xs:documentation>
                        Resolution to skip.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>

            <xs:enumeration value="STOP">
                <xs:annotation>
                    <xs:documentation>
                        Resolution to stop.
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <!-- Allow user-defined resolutions in addition to built-in resolution values -->
    <xs:simpleType name="ResolutionsAll">
        <xs:annotation>
            <xs:documentation>
                Can be either one of the internally-supported condition resolutions or a custom one.
            </xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="Resolutions xs:string"/>
    </xs:simpleType>

    <!-- Element <scenario> definition -->
    <xs:complexType name="Scenario">
        <xs:sequence>
            <xs:element name="property" type="Property" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Specifies scenario configuration property.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="step" type="ScenarioStep" minOccurs="1" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        Defines a scenario step.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>

        <xs:attributeGroup ref="ScenarioEntityAttributes">
            <xs:annotation>
                <xs:documentation>
                    Defines common scenario attributes.
                </xs:documentation>
            </xs:annotation>
        </xs:attributeGroup>
    </xs:complexType>
</xs:schema>