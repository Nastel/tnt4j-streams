<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2014-2022 JKOOL, LLC.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<tnt-data-source
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Nastel/tnt4j-streams/master/tnt4j-streams-ws/config/tnt-data-source-ws.xsd">

    <resource-ref id="MetricsParsers" type="Parser" uri="parsers.xml"/>

    <stream name="AmazonMSKMetricsStream" class="com.jkoolcloud.tnt4j.streams.inputs.RestStream">
        <property name="HaltIfNoParser" value="false"/>
        <property name="SplitRelatives" value="false"/>
        <property name="SendStreamStates" value="false"/>
        <property name="BuildSourceFQNFromStreamedData" value="true"/>
        <!-- Remove APPL token to have JMX and Node metrics right under broker node -->
        <property name="SourceFQN"
                  value="APPL=${ApplName}#APPSERVER=${BrokerId}#NETWORK=${ClusterName}#GEOADDR=${RegionId}#SERVICE=${ServiceName}#DATACENTER=${DataCenter}"/>
        <property name="RetryStateCheck" value="true"/>
        <property name="RetryInterval" value="300"/>

        <tnt4j-properties>
            <!-- File sink -->
            <!--property name="event.sink.factory.EventSinkFactory.prod" value="com.jkoolcloud.tnt4j.sink.impl.FileEventSinkFactory"/>
            <property name="event.sink.factory.EventSinkFactory.prod.FileName" value="./logs/tnt4j-streams_samples.log"/-->

            <!-- Socket sink to AutoPilot -->
            <property name="event.sink.factory.EventSinkFactory.prod" value="com.jkoolcloud.tnt4j.sink.impl.SocketEventSinkFactory"/>
            <property name="event.sink.factory.EventSinkFactory.prod.LogSink" value="file:./logs/tnt4j-streams_samples_socket.log"/>
            <!-- Change to your AP machine host/IP -->
            <property name="event.sink.factory.EventSinkFactory.prod.Host" value="localhost"/>
            <!-- Change to your Ap machine port - default one is 6060 -->
            <property name="event.sink.factory.EventSinkFactory.prod.Port" value="6060"/>

            <property name="event.formatter" value="com.jkoolcloud.tnt4j.streams.custom.format.openmetrics.FactPathValueFormatter"/>
            <property name="event.formatter.KeyReplacements">" "->"_" "\""->"'" "/"->"%" "="->"\\" ","->"!'" "\\\\"->"\\"</property>
            <property name="event.formatter.ValueReplacements">"\r"->"\\r" "\n"->"\\n" ";"->"|" ","->"|" "["->"{(" "]"->")}" "\""->"'"
            </property>
            <property name="event.formatter.PathLevelAttributes">
                domain;device,fstype,mountpoint;mType;name;request,error;mName;mToken4;quantile;version;cpu;mode;collector;code;mToken5;mToken6;mToken7;mToken8
            </property>
        </tnt4j-properties>

        <parser-ref name="MetricsParser"/>

        <scenario name="Amazon MSK metrics">
            <!-- Set your OpenMetrics data center name -->
            <property name="dataCenter" value="Amazon_AWS"/>
            <!-- Set your Amazon AWS service name -->
            <property name="serviceName" value="MSK"/>
            <!-- Set your MSK region -->
            <property name="region" value="us-east-1"/>
            <!-- Set your MSK cluster host base, like xxxx.xxx.kafka.us-east-1.amazonaws.com -->
            <property name="mskUrl" value="[YOUR_MSK_CLUSTER_URL]"/>
            <!-- Set your MSK cluster name -->
            <property name="cluster" value="[YOUR_MSK_CLUSTER_NAME]"/>

            <step name="B1_Metrics"
                  method="GET">
                <property name="SynchronizeRequests" value="true"/>

                <schedule-simple interval="60" units="Seconds" repeatCount="-1" startDelay="0" startDelayUnits="Seconds"/>

                <!-- Set your MSK broker identifier -->
                <property name="brokerId" value="b-1"/>

                <request id="B1_JMX_Metrics">
                    http://${brokerId}.${cluster}.${mskUrl}:11001

                    <req-param id="applId" value="JMX_Metrics" transient="true"/>
                </request>
                <request id="B1_Node_Metrics">
                    http://${brokerId}.${cluster}.${mskUrl}:11002/metrics

                    <req-param id="applId" value="Node_Metrics" transient="true"/>
                </request>
            </step>
            <step name="B2_Metrics"
                  method="GET">
                <property name="SynchronizeRequests" value="true"/>

                <schedule-simple interval="60" units="Seconds" repeatCount="-1" startDelay="5" startDelayUnits="Seconds"/>

                <!-- Set your MSK broker identifier -->
                <property name="brokerId" value="b-2"/>

                <request id="B2_JMX_Metrics">
                    http://${brokerId}.${cluster}.${mskUrl}:11001

                    <req-param id="applId" value="JMX_Metrics" transient="true"/>
                </request>
                <request id="B2_Node_Metrics">
                    http://${brokerId}.${cluster}.${mskUrl}:11002/metrics

                    <req-param id="applId" value="Node_Metrics" transient="true"/>
                </request>
            </step>
            <step name="B3_Metrics"
                  method="GET">
                <property name="SynchronizeRequests" value="true"/>

                <schedule-simple interval="60" units="Seconds" repeatCount="-1" startDelay="10" startDelayUnits="Seconds"/>

                <!-- Set your MSK broker identifier -->
                <property name="brokerId" value="b-3"/>

                <request id="B3_JMX_Metrics">
                    http://${brokerId}.${cluster}.${mskUrl}:11001

                    <req-param id="applId" value="JMX_Metrics" transient="true"/>
                </request>
                <request id="B3_Node_Metrics">
                    http://${brokerId}.${cluster}.${mskUrl}:11002/metrics

                    <req-param id="applId" value="Node_Metrics" transient="true"/>
                </request>
            </step>
        </scenario>
    </stream>
</tnt-data-source>
