<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2014-2022 JKOOL, LLC.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<tnt-data-source
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Nastel/tnt4j-streams/master/config/tnt-data-source.xsd">

    <parser name="MetricLineParser" class="com.jkoolcloud.tnt4j.streams.parsers.ActivityJsonParser">
        <property name="ActivityDelim" value="EOL"/>

        <field name="EventType" value="Snapshot"/>
        <field name="EventName" value="snapName">
            <field-transform lang="groovy"><![CDATA[
                String props = "";
                props += (StringUtils.isEmpty(${Namespace}) ? "" : "namespace=" + ${Namespace});
                props += (StringUtils.isEmpty(${Region}) ? "" : (props.length() > 0 ? "," : "") + "region=" + ${Region});
                props += (StringUtils.isEmpty(${ClusterName}) ? "" : (props.length() > 0 ? "," : "") + "cluster=" + ${ClusterName});
                props += (StringUtils.isEmpty(${BrokerId}) ? "" : (props.length() > 0 ? "," : "") + "broker=" + ${BrokerId});
                props += (StringUtils.isEmpty(${Topic}) ? "" : (props.length() > 0 ? "," : "") + "topic=" + ${Topic});
                props += (StringUtils.isEmpty(${ConsumerGroup}) ? "" : (props.length() > 0 ? "," : "") + "cGroup=" + ${ConsumerGroup});
                props += (StringUtils.isEmpty(${ClientAuth}) ? "" : (props.length() > 0 ? "," : "") + "cAuth=" + ${ClientAuth});
                props += (StringUtils.isEmpty(${MetricName}) ? "" : (props.length() > 0 ? "," : "") + "metric=" + ${MetricName});

                ${MetricStreamName} + ":" + props
            ]]></field-transform>
        </field>
        <field name="Severity" value="INFO"/>

        <field name="MetricStreamName" locator="$.metric_stream_name" locator-type="Label" transparent="true"/>
        <field name="UserName" locator="$.account_id" locator-type="Label" transparent="true"/>
        <field name="Region" locator="$.region" locator-type="Label" transparent="true"/>
        <field name="Namespace" locator="$.namespace" locator-type="Label" transparent="true"/>
        <field name="MetricName" locator="$.metric_name" locator-type="Label" transparent="true"/>

        <field name="BrokerId" locator="$.dimensions.['Broker ID']" locator-type="Label" transparent="true">
            <field-transform lang="groovy"><![CDATA[
                StringUtils.isEmpty($fieldValue)
                    ? $fieldValue
                    : StringUtils.isNumeric ($fieldValue)
                        ? "b-" + $fieldValue
                        : $fieldValue
            ]]></field-transform>
        </field>
        <field name="ClusterName" locator="$.dimensions.['Cluster Name']" locator-type="Label" transparent="true"/>
        <field name="Topic" locator="$.dimensions.Topic" locator-type="Label" transparent="true"/>
        <field name="ConsumerGroup" locator="$.dimensions.['Consumer Group']" locator-type="Label" transparent="true"/>
        <field name="ClientAuth" locator="$.dimensions.['Client Authentication']" locator-type="Label" transparent="true"/>

        <field name="StartTime" locator="$.timestamp" locator-type="Label" datatype="Timestamp"/>
        <field name="EndTime" locator="StartTime" locator-type="Activity"/>

        <field name="Max" locator="$.value.max" locator-type="Label"/>
        <field name="Min" locator="$.value.min" locator-type="Label"/>
        <field name="Sum" locator="$.value.sum" locator-type="Label"/>
        <field name="Count" locator="$.value.count" locator-type="Label"/>
        <field name="P99" locator="$.value.p99" locator-type="Label"/>
        <field name="Unit" locator="$.unit" locator-type="Label"/>

        <field name="Rest" locator="#" locator-type="Label"/>
    </parser>
    <parser name="MetricEntryParser" class="com.jkoolcloud.tnt4j.streams.parsers.ActivityStringParser" manualFieldsOrder="true">
        <property name="ActivityDelim" value="EOL"/>

        <field name="EventType" value="Activity"/>

        <field name="StartTime" locator="DateTime" locator-type="StreamProp" datatype="Timestamp"/>
        <field name="EndTime" locator="DateTime" locator-type="StreamProp" datatype="Timestamp"/>

        <embedded-activity name="MetricData" locator="$DATA$" locator-type="Label">
            <parser-ref name="MetricLineParser" aggregation="Relate"/>
        </embedded-activity>

        <field name="DataCenter" value="Amazon_AWS"/>
    </parser>

    <parser name="MetricsParserStr" class="com.jkoolcloud.tnt4j.streams.parsers.ActivityStringParser">
        <property name="ActivityDelim" value="EOF"/>

        <field name="EventType" value="NOOP"/>
        <embedded-activity name="MetricsData" locator="$DATA$" locator-type="Label">
            <field-transform lang="groovy"><![CDATA[
                String[] lines = $fieldValue.split("\\r|\\n");
                List<String> payloadLines = new ArrayList<>(lines.length);

                for (String line : lines) {
                    // Remove comment/empty lines
                    boolean pass = StringUtils.isNotEmpty(line);
                    // Add additional lines filtering, e.g. pick only 'kafka_server_XXXXXXX' lines
                    //pass &= Matchers.evaluate("regex:kafka_server_.+", line);

                    if (pass) {
                        payloadLines.add(line);
                    }
                }

                return payloadLines;
            ]]></field-transform>
            <parser-ref name="MetricEntryParser" aggregation="Relate"/>
        </embedded-activity>
    </parser>

    <parser name="MetricsParser" class="com.jkoolcloud.tnt4j.streams.parsers.ActivityMapParser">

        <field name="EventType" value="NOOP"/>
        <embedded-activity name="MetricsData" locator="ActivityData" locator-type="Label">
            <field-transform lang="groovy"><![CDATA[
                String[] lines = $fieldValue.split("\\r|\\n");
                List<String> payloadLines = new ArrayList<>(lines.length);

                for (String line : lines) {
                    // Remove comment/empty lines
                    boolean pass = StringUtils.isNotEmpty(line);
                    // Add additional lines filtering, e.g. pick only 'kafka_server_XXXXXXX' lines
                    //pass &= Matchers.evaluate("regex:kafka_server_.+", line);

                    if (pass) {
                        payloadLines.add(line);
                    }
                }

                return payloadLines;
            ]]></field-transform>
            <parser-ref name="MetricEntryParser" aggregation="Relate"/>
        </embedded-activity>
    </parser>
</tnt-data-source>