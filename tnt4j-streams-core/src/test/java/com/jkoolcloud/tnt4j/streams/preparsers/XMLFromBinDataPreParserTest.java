/*
 * Copyright 2014-2023 JKOOL, LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.jkoolcloud.tnt4j.streams.preparsers;

import static org.junit.Assert.assertEquals;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.ParseException;

import org.junit.Test;
import org.w3c.dom.Node;
import org.w3c.dom.bootstrap.DOMImplementationRegistry;
import org.w3c.dom.ls.DOMImplementationLS;
import org.w3c.dom.ls.LSOutput;
import org.w3c.dom.ls.LSSerializer;

import com.jkoolcloud.tnt4j.streams.utils.Utils;

/**
 * @author akausinis
 * @version 1.0
 */
public class XMLFromBinDataPreParserTest {

	@Test
	public void testPreParseDefaultNS() throws Exception {
		byte[] fileBuffer = Files
				.readAllBytes(Paths.get("../tnt4j-streams-core/samples/XML-from-bin-data/default_ns.dump")); // NON-NLS
		String output = preParseBinData(fileBuffer);

		String expected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root>\n" + "    <mcd>\n"
				+ "        <Msd>mrm</Msd>\n" + "        <Set>ia9f_BLOB</Set>\n" + "        <Type>BLOB_BO</Type>\n"
				+ "        <Fmt>CwXML</Fmt>\n" + "    </mcd>\n" + "    <usr>\n"
				+ "        <ROUTE>BB_GB8_YYYY_SAP_MANBAR_FLOW_Delivery_OTC</ROUTE>\n"
				+ "        <QUEUE_OUT>UEB301S.QR.WFRSTO68Q.QL.EAI_FRxZZZJTEXT</QUEUE_OUT>\n"
				+ "        <CCSID>1208</CCSID>\n" + "        <APPLICATION_TARGET>MANBAR</APPLICATION_TARGET>\n"
				+ "        <APPLICATION_SOURCE>SAP</APPLICATION_SOURCE>\n"
				+ "        <COMPANY_CODE>XXX</COMPANY_CODE>\n" + "        <CBU>GB8</CBU>\n"
				+ "        <PLANT_CODE>YYYY</PLANT_CODE>\n" + "        <PLANT>YYYY</PLANT>\n"
				+ "        <MESSAGE_TYPE>ZCORDELVRY05_OTC</MESSAGE_TYPE>\n" + "        <QUEUE_TYPE>JTEXT</QUEUE_TYPE>\n"
				+ "        <EXTENSION>.txt</EXTENSION>\n"
				+ "        <FILENAMX>D:\\MQTools\\test_nastel\\file\\</FILENAMX>\n"
				+ "        <MQ_COM>UEB301S.QL.XXX_ALL_COM01</MQ_COM>\n"
				+ "        <FILTER_CODE>GB8LIVMANS</FILTER_CODE>\n"
				+ "        <MQ_ROUTE>UEB301S.QL.AB_GB8_SAP_MANBAR</MQ_ROUTE>\n"
				+ "        <FILEWRITEMODE>O</FILEWRITEMODE>\n" + "        <QUEUE_MANAGER>UEB301S</QUEUE_MANAGER>\n"
				+ "        <DOX_NUMBER>0000000129279872</DOX_NUMBER>\n" + "        <SAP_SYSTEM>Q02204</SAP_SYSTEM>\n"
				+ "    </usr>\n" + "    <BLOB_BO:BLOB_BO verb=\"Create\"\n"
				+ "        xmlns:BLOB_BO=\"http://www.ibm.com/websphere/crossworlds/2002/BOSchema/BLOB_BO\"\n"
				+ "        xmlns:JText_META_DATA=\"http://www.ibm.com/websphere/crossworlds/2002/BOSchema/JText_META_DATA\"\n"
				+ "        xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n"
				+ "        <BLOB_BO:BLOB>3c3f786d6c2076657273696f6e3d22312e30223f3e3c4e53313a4a4442435f4742385f44454c494e5320786d6c6e733a4e53313d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f44454c494e532220786d6c6e733a4e53323d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f41534e2220786d6c6e733a4e53333d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f41534e5f54494e5641534e2220786d6c6e733a4e53343d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f44454c5047492220786d6c6e733a4e53353d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f47494e53542220786d6c6e733a4e53363d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f47522220786d6c6e733a4e53373d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f4d4154455249414c2220786d6c6e733a4e53383d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f50444553432220786d6c6e733a4e53393d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f50444553435f5049564f542220786d6c6e733a4e5331303d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f504f2220786d6c6e733a4e5331313d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f504f5f5341505f504f44544c46494c2220786d6c6e733a4e5331323d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f504f5f5341505f504f48445246494c2220786d6c6e733a4e5331333d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f534e41502220786d6c6e733a4e5331343d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f53544d2220786d6c6e733a4e5331353d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f53544d5f5049564f542220786d6c6e733a4e5331363d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f435553544144442220786d6c6e733a4e5331373d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f47554152445f50414c4c45545f494e464f2220786d6c6e733a4e5331383d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f4845414445525f544558542220786d6c6e733a4e5331393d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f4954454d5f4d41535445522220786d6c6e733a4e5332303d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f4c494e455f544558542220786d6c6e733a4e5332313d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f50422220786d6c6e733a4e5332323d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f534f4446494c2220786d6c6e733a4e5332333d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f534f4546494c2220786d6c6e733a4e5332343d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f5447494e53542220786d6c6e733a4e5332353d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f54475550442220786d6c6e733a4e5332363d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f54475550445f5049564f542220786d6c6e733a4e5332373d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f54494e5243562220786d6c6e733a51313d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f54534b4d56542220786d6c6e733a4e5332383d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f54534b4d56545f5049564f542220786d6c6e733a4e5332393d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f54534e41502220786d6c6e733a4e5333303d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f54535343432220786d6c6e733a4e5333313d22687474703a2f2f7777772e69626d2e636f6d2f7765627370686572652f63726f7373776f726c64732f323030322f424f536368656d612f4a4442435f4742385f545f54535343435f5049564f542220786d6c6e733a7873643d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612220786d6c6e733a7873693d22687474703a2f2f7777772e77332e6f72672f323030312f584d4c536368656d612d696e7374616e6365222076657273696f6e3d22302e302e30222064656c74613d223022206c6f63616c653d222220766572623d22437265617465223e3c4e53313a646972656374696f6e3e4f3c2f4e53313a646972656374696f6e3e3c4e53313a7472616e736d697373696f6e5f69643e32323936373c2f4e53313a7472616e736d697373696f6e5f69643e3c4e53313a6f626a6563745f6e616d653e4a4442435f4742385f44454c494e533c2f4e53313a6f626a6563745f6e616d653e3c4e53313a635f646174653e31372f30332f323031362031333a34383a33393c2f4e53313a635f646174653e3c4e53313a635f757365723e4541493c2f4e53313a635f757365723e3c4e53313a755f646174653e31372f30332f323031362031333a34383a33393c2f4e53313a755f646174653e3c4e53313a755f757365723e4541493c2f4e53313a755f757365723e3c4e53313a7374617475733e523c2f4e53313a7374617475733e3c4e53313a7374617475735f6d6573736167653e46726f6d205341503a513032434c4e54323034202f2049444f433a313239323739383732202f2053415020446f63756d656e743a363030303031343136303c2f4e53313a7374617475735f6d6573736167653e3c4e53313a4742385f545f435553544144443e3c4e5331363a4a4442435f4742385f545f435553544144442076657273696f6e3d22302e302e30222064656c74613d223022206c6f63616c653d22223e3c4e5331363a5452414e534d495353494f4e5f49443e32323936373c2f4e5331363a5452414e534d495353494f4e5f49443e3c4e5331363a50433e343130313c2f4e5331363a50433e3c4e5331363a5748533e343130313c2f4e5331363a5748533e3c4e5331363a5348504e4f3e3635303033383332353c2f4e5331363a5348504e4f3e3c4e5331363a534f4e554d3e363030303031343136303c2f4e5331363a534f4e554d3e3c4e5331363a4e414d453e4e55545249434941204e4f52544820414d45524943413c2f4e5331363a4e414d453e3c4e5331363a41444452455353323e5550533c2f4e5331363a41444452455353323e3c4e5331363a41444452455353333e343031205155414c49545920434952434c453c2f4e5331363a41444452455353333e3c4e5331363a41444452455353343e484152524953425552473c2f4e5331363a41444452455353343e3c4e5331363a41444452455353353e55532031373131323c2f4e5331363a41444452455353353e3c4e5331363a5a4950434f44453e31373131323c2f4e5331363a5a4950434f44453e3c4e5331363a50484f4e453e3c2f4e5331363a50484f4e453e3c4e5331363a4641583e3c2f4e5331363a4641583e3c4e5331363a454d41494c3e3c2f4e5331363a454d41494c3e3c4e5331363a434f554e5452593e55533c2f4e5331363a434f554e5452593e3c2f4e5331363a4a4442435f4742385f545f435553544144443e3c2f4e53313a4742385f545f435553544144443e3c4e53313a4742385f545f4845414445525f544558542073697a653d2231223e3c4e5331383a4a4442435f4742385f545f4845414445525f544558542076657273696f6e3d22302e302e30222064656c74613d223022206c6f63616c653d22223e3c4e5331383a5452414e534d495353494f4e5f49443e32323936373c2f4e5331383a5452414e534d495353494f4e5f49443e3c4e5331383a534f4e554d3e363030303031343136303c2f4e5331383a534f4e554d3e3c4e5331383a544558545f434f44453e504c3c2f4e5331383a544558545f434f44453e3c4e5331383a4c494e455f4e554d4245523e313c2f4e5331383a4c494e455f4e554d4245523e3c4e5331383a544558545f434f4e54454e543e4f6e6c79206f6e65206d697865642070616c6c65743c2f4e5331383a544558545f434f4e54454e543e3c2f4e5331383a4a4442435f4742385f545f4845414445525f544558543e3c2f4e53313a4742385f545f4845414445525f544558543e3c4e53313a4742385f545f534f4446494c2073697a653d2231223e3c4e5332323a4a4442435f4742385f545f534f4446494c2076657273696f6e3d22302e302e30222064656c74613d223022206c6f63616c653d22223e3c4e5332323a5452414e534d495353494f4e5f49443e32323936373c2f4e5332323a5452414e534d495353494f4e5f49443e3c4e5332323a50433e343130313c2f4e5332323a50433e3c4e5332323a534f3e363030303031343136303c2f4e5332323a534f3e3c4e5332323a494e313e36313331313c2f4e5332323a494e313e3c4e5332323a534c3e3030303031303c2f4e5332323a534c3e3c4e5332323a514f52443e3138302e3030303c2f4e5332323a514f52443e3c4e5332323a50524f464c473e303c2f4e5332323a50524f464c473e3c4e5332323a534348444154453e31392f30322f323031363c2f4e5332323a534348444154453e3c4e5332323a524551444154453e31392f30322f323031363c2f4e5332323a524551444154453e3c4e5332323a5748533e343130313c2f4e5332323a5748533e3c4e5332323a534849505649413e3c2f4e5332323a534849505649413e3c4e5332323a54524144455f554e49543e43543c2f4e5332323a54524144455f554e49543e3c2f4e5332323a4a4442435f4742385f545f534f4446494c3e3c2f4e53313a4742385f545f534f4446494c3e3c4e53313a4742385f545f534f4546494c3e3c4e5332333a4a4442435f4742385f545f534f4546494c2076657273696f6e3d22302e302e30222064656c74613d223022206c6f63616c653d22223e3c4e5332333a5452414e534d495353494f4e5f49443e32323936373c2f4e5332333a5452414e534d495353494f4e5f49443e3c4e5332333a504c414e545f434f44453e343130313c2f4e5332333a504c414e545f434f44453e3c4e5332333a534f4e554d3e363030303031343136303c2f4e5332333a534f4e554d3e3c4e5332333a5348504e4f3e3635303033383332353c2f4e5332333a5348504e4f3e3c4e5332333a534f454652543e4441503c2f4e5332333a534f454652543e3c4e5332333a534849505649413e3c2f4e5332333a534849505649413e3c4e5332333a4f5244545950453e523c2f4e5332333a4f5244545950453e3c4e5332333a43434f44453e32303032373435343c2f4e5332333a43434f44453e3c4e5332333a4f52444c4f543e303c2f4e5332333a4f52444c4f543e3c4e5332333a534f45504f3e353030303131333231363c2f4e5332333a534f45504f3e3c4e5332333a5748533e343130313c2f4e5332333a5748533e3c4e5332333a534849505f434f4e443e53313c2f4e5332333a534849505f434f4e443e3c4e5332333a5245465f444f43554d454e543e303036303130393639303c2f4e5332333a5245465f444f43554d454e543e3c4e5332333a44454c5f545950453e5a4c523c2f4e5332333a44454c5f545950453e3c2f4e5332333a4a4442435f4742385f545f534f4546494c3e3c2f4e53313a4742385f545f534f4546494c3e3c2f4e53313a4a4442435f4742385f44454c494e533e</BLOB_BO:BLOB>\n"
				+ "        <BLOB_BO:MetaData>\n" + "            <JText_META_DATA:JText_META_DATA>\n"
				+ "                <JText_META_DATA:FileWriteMode>o</JText_META_DATA:FileWriteMode>\n"
				+ "                <JText_META_DATA:OutFileName>D:\\MQTools\\test_nastel\\file\\SAP_ZCORDELVRY05_OTC_XXX_YYYY_20160317_134839222.txt</JText_META_DATA:OutFileName>\n"
				+ "            </JText_META_DATA:JText_META_DATA>\n" + "        </BLOB_BO:MetaData>\n"
				+ "    </BLOB_BO:BLOB_BO>\n" + "</root>\n"; // NON-NLS

		assertEquals(expected, output);
	}

	@Test
	public void testPreParse() throws Exception {
		// Source data
		byte[] fileBuffer = Files.readAllBytes(Paths.get("../tnt4j-streams-core/samples/XML-from-bin-data/RFH2.dump")); // NON-NLS
		String output = preParseBinData(fileBuffer);

		String expected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n    <mcd>\n        <Msd>jms_text</Msd>\n    </mcd>\n    <jms/>\n    <usr>\n        <Root>ADP</Root>\n        <DataClass>HR</DataClass>\n        <Verb>GET</Verb>\n        <Noun>INDICATIVEASSOCIATE</Noun>\n        <DataVer>003:000</DataVer>\n        <SrcAppID>ACS</SrcAppID>\n        <CustID>0AACH8JB0DZ00013</CustID>\n        <ADPMsgCorrelationID>FE02F255-8872-1319-42C3-B84DFBBBFDF1</ADPMsgCorrelationID>\n        <SrcSysID>ACS</SrcSysID>\n        <SrcAppVer>001:000</SrcAppVer>\n        <ADPHdrVer>002:001</ADPHdrVer>\n        <PldEffTime>20090910T120813000Z</PldEffTime>\n        <PldFmt>XML</PldFmt>\n        <ADPSegCont>N</ADPSegCont>\n        <SrcCorrID>D47E6EE0-C01B-117B-8552-FFD7C1F0F7FF</SrcCorrID>\n        <RoutingOverride>REPLACE</RoutingOverride>\n        <RoutingOverrideQueue>ADP.ES.INFO.BB.PAYX</RoutingOverrideQueue>\n        <TestID>ACS_Get_IndicativeAssociate_3.0</TestID>\n    </usr>\n</root>\n"; // NON-NLS
		assertEquals(expected, output);
	}

	@Test
	public void testPreParseIncomplete() throws Exception {
		// Source data
		byte[] fileBuffer = Files
				.readAllBytes(Paths.get("../tnt4j-streams-core/samples/XML-from-bin-data/RFH2_incomplete.dump")); // NON-NLS
		String output = preParseBinData(fileBuffer);

		String expected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n    <mcd>\n        <Msd>jms_text</Msd>\n    </mcd>\n    <jms/>\n    <usr>\n        <Root>ADP</Root>\n        <DataClass>HR</DataClass>\n        <Verb>GET</Verb>\n        <Noun>INDICATIVEASSOCIATE</Noun>\n        <DataVer>003:000</DataVer>\n        <SrcAppID>ACS</SrcAppID>\n        <CustID>0AACH8JB0DZ00013</CustID>\n        <ADPMsgCorrelationID>FE02F255-8872-1319-42C3-B84DFBBBFDF1</ADPMsgCorrelationID>\n        <SrcSysID>ACS</SrcSysID>\n        <SrcAppVer>001:000</SrcAppVer>\n        <ADPHdrVer>002:001</ADPHdrVer>\n        <PldEffTime>20090910T120813000Z</PldEffTime>\n        <PldFmt>XML</PldFmt>\n        <ADPSegCont>N</ADPSegCont>\n        <SrcCorrID>D47E6EE0-C01B-117B-8552-FFD7C1F0F7FF</SrcCorrID>\n        <RoutingOverride>REPLACE</RoutingOverride>\n        <RoutingOverrideQueue>ADP.ES.INFO.BB.PAYX</RoutingOverrideQueue>\n    </usr>\n</root>\n"; // NON-NLS
		assertEquals(expected, output);
	}

	private static String preParseBinData(byte[] binData) throws Exception {
		// init
		XMLFromBinDataPreParser preParser = new XMLFromBinDataPreParser();
		Node document = preParse(binData, preParser);

		// Result
		return getString(document);
	}

	private static String getString(Node document)
			throws ClassNotFoundException, InstantiationException, IllegalAccessException {
		DOMImplementationRegistry registry = DOMImplementationRegistry.newInstance();
		DOMImplementationLS impl = (DOMImplementationLS) registry.getDOMImplementation("LS"); // NON-NLS
		LSOutput lsOutput = impl.createLSOutput();
		lsOutput.setEncoding(Utils.UTF8);
		Writer stringWriter = new StringWriter();
		lsOutput.setCharacterStream(stringWriter);
		LSSerializer lsSerializer = impl.createLSSerializer();

		lsSerializer.getDomConfig().setParameter("format-pretty-print", Boolean.TRUE); // NON-NLS
		// lsSerializer.getDomConfig().setParameter("xml-declaration", keepDeclaration); // Set this to true if the
		// declaration is needed to be in output.

		lsSerializer.write(document, lsOutput);
		return stringWriter.toString();
	}

	private static Node preParse(byte[] binData, XMLFromBinDataPreParser preParser) throws ParseException {
		// Source
		InputStream is = new ByteArrayInputStream(binData);
		try {
			// Pre-parse
			return preParser.preParse(is);
		} finally {
			Utils.close(is);
		}
	}
}
